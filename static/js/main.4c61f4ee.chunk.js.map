{"version":3,"sources":["constants/actionConstants.js","store/login/reducers.js","store/user/reducers.js","store/requestError/reducers.js","store/pagination/reducers.js","store/entities/reducers.js","store/popup/reducers.js","store/rootReducer.js","store/store.js","store/user/actionCreators.js","store/login/actionCreators.js","components/layouts/InputField/index.jsx","components/layouts/Button/index.jsx","components/layouts/RegisterLink/index.jsx","constants/fetchConstants.js","constants/commonConstants.js","utils/commonUtils.js","utils/apiUtils.js","assets/images/logo_icon.svg","components/pages/LoginPage/index.jsx","store/popup/actionCreators.js","components/layouts/Popup/index.jsx","assets/images/avatar.jpg","components/layouts/Header/index.jsx","components/layouts/Footer/index.jsx","components/layouts/Menu/MenuItem.jsx","components/layouts/Menu/index.jsx","store/requestError/actionCreators.js","components/RequestError/index.jsx","components/layouts/Selector/index.jsx","components/Orders/OrdersFilter.jsx","store/pagination/actionCreators.js","components/layouts/Pagination/index.jsx","components/layouts/Preloader/index.jsx","components/CarsList/CarCard.jsx","components/layouts/Checkbox/index.jsx","components/Orders/OrderCard.jsx","components/SimpleCard/SimpleCard.jsx","components/List/ListCard.jsx","components/List/index.jsx","store/entities/actionCreators.js","components/Orders/index.jsx","components/EditItemControls/index.jsx","components/OrderItem/index.jsx","components/CarsList/CarsFilter.jsx","components/CarsList/index.jsx","components/layouts/FileLoader/index.jsx","components/CarItem/CarItemMainInfo.jsx","components/CarItem/CarItemOptions.jsx","components/CarItem/index.jsx","components/PointsList/PointsFilter.jsx","components/PointsList/index.jsx","components/CategoriesList/index.jsx","components/CitiesList/index.jsx","components/PointItem/index.jsx","components/CategoryItem/index.jsx","components/CityItem/index.jsx","components/pages/AdminPage/index.jsx","App.jsx","index.jsx"],"names":["LOGIN_CHANGE_EMAIL_TEXT","LOGIN_CHANGE_PASSWORD_TEXT","LOGIN_SET_EMAIL_ERROR","LOGIN_SET_PASSWORD_ERROR","LOGIN_SET_IS_NO_REGISTER","LOGIN_SET_IS_AUTH_ERROR","USER_LOGIN","USER_CHECK","USER_LOGOUT","REQUEST_ERROR_SET_ERROR","REQUEST_ERROR_UNSET_ERROR","PAGINATION_SET_CURRENT_PAGE","PAGINATION_SET_COUNT_PAGES","PAGINATION_SET_NEXT_PAGE","PAGINATION_SET_PREV_PAGE","POPUP_SET_POPUP","POPUP_UNSET_POPUP","ENTITIES_SET_ORDERS","ENTITIES_SET_STATUSES","ENTITIES_SET_CARS","ENTITIES_SET_CITIES","ENTITIES_SET_POINTS","ENTITIES_SET_CATEGORIES","ENTITIES_SET_SINGLE_ENTITY","ENTITIES_SET_SINGLE_ENTITY_OPTION","ENTITIES_SET_SINGLE_ENTITY_ADDITIONAL_OPTION","initialState","email","emailValue","isEmailError","password","passwordValue","isPasswordError","isNoRegister","isAuthError","isLogged","name","isError","errorStatus","currentPage","pagesCount","orders","statuses","cars","cities","points","categories","singleEntity","isPopup","isSuccess","text","rootReducer","combineReducers","login","state","action","type","payload","user","requestError","pagination","entities","option","entityName","entityVal","addOption","Object","keys","forEach","key","popup","store","createStore","userCheck","userName","setEmailError","setPasswordError","setIsNoRegister","setIsAuthError","InputField","inputValue","setInputValue","label","placeholder","setIsError","inputFieldClasses","classNames","is_error","inputError","active","className","htmlFor","id","value","onChange","evt","target","length","defaultProps","Button","title","color","location","onclick","isDisabled","btnClasses","onClick","disabled","RegisterLink","useSelector","dispatch","useDispatch","registerErrorClasses","useEffect","setTimeout","href","preventDefault","SECRET","DOMAIN_URL","LOGIN_URL","CHECK_URL","API_DB_URL","ORDERS_DB","STATUSES_DB","CARS_DB","CITIES_DB","POINTS_DB","CATEGORIES_DB","DEFAULT_HEADERS","SYMBOLS","MENU_ITEMS","path","img","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","now","Date","dayMs","PERIODS","dateFrom","PRELOADER_ITEMS_ARR","createRandomString","size","randomString","Math","floor","random","getImgSrc","entityObj","thumbnail","includes","replaceDateFormat","date","toLocaleString","year","month","day","hour","minute","replace","setSearchParams","paramsArr","searchParams","URLSearchParams","paramValue","paramName","set","delete","getSearchParam","searchParam","search","get","changeNumberFormat","str","strArr","split","join","addHeaders","headers","options","newHeaders","doFetch","url","a","newOptions","fetch","response","console","error","Promise","reject","Error","message","ok","httpStatus","status","httpText","json","getAuthHeader","accessToken","localStorage","getItem","Authorization","salt","basic","window","btoa","body","JSON","stringify","username","method","access_token","refresh_token","checkUser","getEntityList","searchParamsStr","page","getSingleEntity","LoginPage","authErrorClasses","src","icon","alt","setEmailText","setPasswordText","then","res","setItem","catch","err","setPopup","unsetPopup","Popup","popupClasses","handleClosePopup","onKeyDown","role","tabIndex","Header","useState","searchValue","setSearchValue","isActiveDropdown","setIsActiveDropdown","notificationCount","setNotificationCount","timerIdRef","useRef","dropdownIconClasses","dropdownMenuClasses","handleDropdownClick","prevIsActiveDropdown","current","setInterval","prevCount","handleNotificationsClick","clearInterval","avatarSrc","removeItem","Footer","to","rel","getFullYear","MenuItem","exact","activeClassName","Menu","map","item","setRequestError","RequestError","history","useHistory","goBack","Selector","chosenItem","setChosen","selectorArr","activeSelector","setActiveSelector","chooseHandler","selectorClasses","selectorOptionsClasses","selectorIconClasses","prevActiveSelector","OrderFilters","useLocation","pathname","push","chosenPeriod","setChosenPeriod","chosenCar","setChosenCar","chosenCity","setChosenCity","chosenStatus","setChosenStatus","dateFromVal","carIdVal","cityIdVal","orderStatusIdVal","newChosenPeriod","find","data","period","car","city","setCurrentPage","pageNumber","Pagination","itemsPerPage","handlePageClick","handlePrevClick","handleNextClick","newPagesCount","ceil","currentPageClasses","Preloader","style","animationDelay","CarCard","carObj","categoryId","number","description","tank","colors","priceMin","priceMax","Checkbox","isReadOnly","setCheckbox","readOnly","checked","optionName","OrderCard","orderObj","carId","cityId","pointId","dateTo","isFullTank","isNeedChildChair","isRightWheel","price","address","SimpleCard","itemObj","ListCard","listName","cardName","component","List","preloaderCondition","entityDb","allItemsArr","filterComponent","visibleList","setVisibleList","setOrders","ordersArr","setStatuses","statusesArr","setCars","carsArr","setCities","citiesArr","setPoints","pointsArr","setCategories","categoriesArr","setSingleEntity","setSingleEntityOption","Orders","OrdersFilter","EditItemControls","idObj","disableSaveBtn","isRedirect","setIsRedirect","createEntity","finally","changeEntity","deleteEntity","OrderItem","useParams","handleEntityChange","handleCheckboxChange","setSingleEntityAdditionalOption","optionsAlert","orderStatusId","CarsFilters","chosenCategory","setChosenCategory","priceFrom","setPriceFrom","priceTo","setPriceTo","setTank","categoryIdVal","priceFromVal","priceToVal","tankVal","category","priceFromStr","priceToStr","tankStr","CarsList","CarsFilter","FileLoader","setImage","accept","file","currentTarget","files","fileReader","FileReader","readAsDataURL","onload","newThumbnail","result","originalname","mimetype","log","CarItemMainInfo","CarItemOptions","colorInputValue","setColorInputValue","colorsArr","setColorsArr","colorsFlagsArr","setColorsFlagsArr","newColorsFlagsArr","neededIndex","indexOf","index","colorName","toLocaleLowerCase","newColorsArr","CarItem","PointsFilter","PointsList","CategoriesList","CitiesList","PointItem","CategoryItem","CityItem","AdminPage","App","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c61f4ee.chunk.js","sourcesContent":["export const LOGIN_CHANGE_EMAIL_TEXT = 'LOGIN_CHANGE_EMAIL_TEXT';\r\nexport const LOGIN_CHANGE_PASSWORD_TEXT = 'LOGIN_CHANGE_PASSWORD_TEXT';\r\nexport const LOGIN_SET_EMAIL_ERROR = 'LOGIN_SET_EMAIL_ERROR';\r\nexport const LOGIN_SET_PASSWORD_ERROR = 'LOGIN_SET_PASSWORD_ERROR';\r\nexport const LOGIN_SET_IS_NO_REGISTER = 'LOGIN_SET_IS_NO_REGISTER';\r\nexport const LOGIN_SET_IS_AUTH_ERROR = 'LOGIN_SET_IS_AUTH_ERROR';\r\n\r\nexport const USER_LOGIN = 'USER_LOGIN';\r\nexport const USER_CHECK = 'USER_CHECK';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const REQUEST_ERROR_SET_ERROR = 'REQUEST_ERROR_SET_ERROR';\r\nexport const REQUEST_ERROR_UNSET_ERROR = 'REQUEST_ERROR_UNSET_ERROR';\r\n\r\nexport const PAGINATION_SET_CURRENT_PAGE = 'PAGINATION_SET_ACTIVE_PAGE';\r\nexport const PAGINATION_SET_COUNT_PAGES = 'PAGINATION_SET_COUNT_PAGES';\r\nexport const PAGINATION_SET_NEXT_PAGE = 'PAGINATION_SET_NEXT_PAGE';\r\nexport const PAGINATION_SET_PREV_PAGE = 'PAGINATION_SET_PREV_PAGE';\r\n\r\nexport const POPUP_SET_POPUP = 'POPUP_SET_POPUP';\r\nexport const POPUP_UNSET_POPUP = 'POPUP_UNSET_POPUP';\r\n\r\nexport const ENTITIES_SET_ORDERS = 'ENTITIES_SET_ORDERS';\r\nexport const ENTITIES_SET_STATUSES = 'ENTITIES_SET_STATUSES';\r\nexport const ENTITIES_SET_CARS = 'ENTITIES_SET_CARS';\r\nexport const ENTITIES_SET_CITIES = 'ENTITIES_SET_CITIES';\r\nexport const ENTITIES_SET_POINTS = 'ENTITIES_SET_POINTS';\r\nexport const ENTITIES_SET_CATEGORIES = 'ENTITIES_SET_CATEGORIES';\r\nexport const ENTITIES_SET_SINGLE_ENTITY = 'ENTITIES_SET_SINGLE_ENTITY';\r\nexport const ENTITIES_SET_SINGLE_ENTITY_OPTION = 'ENTITIES_SET_SINGLE_ENTITY_OPTION';\r\nexport const ENTITIES_SET_SINGLE_ENTITY_ADDITIONAL_OPTION = 'ENTITIES_SET_SINGLE_ENTITY_ADDITIONAL_OPTION';\r\n","import {\r\n    LOGIN_CHANGE_EMAIL_TEXT,\r\n    LOGIN_CHANGE_PASSWORD_TEXT,\r\n    LOGIN_SET_EMAIL_ERROR,\r\n    LOGIN_SET_PASSWORD_ERROR,\r\n    LOGIN_SET_IS_NO_REGISTER,\r\n    LOGIN_SET_IS_AUTH_ERROR,\r\n} from '../../constants/actionConstants';\r\n\r\nconst initialState = {\r\n    email: {\r\n      emailValue: '',\r\n      isEmailError: false,\r\n    },\r\n    password: {\r\n      passwordValue: '',\r\n      isPasswordError: false,\r\n    },\r\n    isNoRegister: false,\r\n    isAuthError: false,\r\n};\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case LOGIN_CHANGE_EMAIL_TEXT:\r\n        return {\r\n          ...state,\r\n          email: {\r\n            ...state.email,\r\n            emailValue: action.payload,\r\n          },\r\n        };\r\n\r\n      case LOGIN_SET_EMAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          email: {\r\n            ...state.email,\r\n            isEmailError: action.payload,\r\n          },\r\n        };\r\n\r\n      case LOGIN_CHANGE_PASSWORD_TEXT:\r\n        return {\r\n          ...state,\r\n          password: {\r\n            ...state.password,\r\n            passwordValue: action.payload,\r\n          },\r\n        };\r\n\r\n      case LOGIN_SET_PASSWORD_ERROR:\r\n        return {\r\n          ...state,\r\n          password: {\r\n            ...state.password,\r\n            isPasswordError: action.payload,\r\n          },\r\n        };\r\n\r\n      case LOGIN_SET_IS_NO_REGISTER:\r\n        return {\r\n          ...state,\r\n          isNoRegister: action.payload,\r\n        };\r\n\r\n      case LOGIN_SET_IS_AUTH_ERROR:\r\n        return {\r\n          ...state,\r\n          isAuthError: action.payload,\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n","import {\r\n    USER_LOGIN,\r\n    USER_CHECK,\r\n    USER_LOGOUT,\r\n} from '../../constants/actionConstants';\r\n\r\nconst initialState = {\r\n    isLogged: false,\r\n    name: '',\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN:\r\n            return {\r\n                ...state,\r\n                isLogged: true,\r\n            };\r\n\r\n        case USER_CHECK:\r\n            return {\r\n                ...state,\r\n                isLogged: true,\r\n                name: action.payload,\r\n            };\r\n\r\n        case USER_LOGOUT:\r\n            return initialState;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n","import {\r\n    REQUEST_ERROR_SET_ERROR,\r\n    REQUEST_ERROR_UNSET_ERROR,\r\n} from '../../constants/actionConstants';\r\n\r\nconst initialState = {\r\n    isError: false,\r\n    errorStatus: '',\r\n};\r\n\r\nexport const requestErrorReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REQUEST_ERROR_SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: true,\r\n                errorStatus: action.payload,\r\n            };\r\n\r\n        case REQUEST_ERROR_UNSET_ERROR:\r\n            return initialState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    PAGINATION_SET_CURRENT_PAGE,\r\n    PAGINATION_SET_COUNT_PAGES,\r\n    PAGINATION_SET_NEXT_PAGE,\r\n    PAGINATION_SET_PREV_PAGE,\r\n} from '../../constants/actionConstants';\r\n\r\nconst initialState = {\r\n    currentPage: 1,\r\n    pagesCount: 1,\r\n};\r\n\r\nexport const paginationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case PAGINATION_SET_CURRENT_PAGE:\r\n        return {\r\n            ...state,\r\n            currentPage: action.payload,\r\n        };\r\n\r\n    case PAGINATION_SET_COUNT_PAGES:\r\n        return {\r\n            ...state,\r\n            pagesCount: action.payload,\r\n        };\r\n\r\n    case PAGINATION_SET_NEXT_PAGE:\r\n        return {\r\n            ...state,\r\n            currentPage:\r\n                state.currentPage === state.pagesCount ? state.pagesCount : state.currentPage + 1,\r\n        };\r\n\r\n    case PAGINATION_SET_PREV_PAGE:\r\n        return {\r\n            ...state,\r\n            currentPage:\r\n                state.currentPage === 1 ? 1 : state.currentPage - 1,\r\n        };\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import {\r\n    ENTITIES_SET_ORDERS,\r\n    ENTITIES_SET_STATUSES,\r\n    ENTITIES_SET_CARS,\r\n    ENTITIES_SET_CITIES,\r\n    ENTITIES_SET_POINTS,\r\n    ENTITIES_SET_CATEGORIES,\r\n    ENTITIES_SET_SINGLE_ENTITY,\r\n    ENTITIES_SET_SINGLE_ENTITY_OPTION,\r\n    ENTITIES_SET_SINGLE_ENTITY_ADDITIONAL_OPTION,\r\n} from '../../constants/actionConstants';\r\n\r\nconst initialState = {\r\n    orders: null,\r\n    statuses: null,\r\n    cars: null,\r\n    cities: null,\r\n    points: null,\r\n    categories: null,\r\n    singleEntity: null,\r\n};\r\n\r\nexport const entitiesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ENTITIES_SET_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload,\r\n            };\r\n\r\n        case ENTITIES_SET_STATUSES:\r\n            return {\r\n                ...state,\r\n                statuses: action.payload,\r\n            };\r\n\r\n        case ENTITIES_SET_CARS:\r\n            return {\r\n                ...state,\r\n                cars: action.payload,\r\n            };\r\n\r\n        case ENTITIES_SET_CITIES:\r\n            return {\r\n                ...state,\r\n                cities: action.payload,\r\n            };\r\n\r\n        case ENTITIES_SET_POINTS:\r\n            return {\r\n                ...state,\r\n                points: action.payload,\r\n            };\r\n\r\n        case ENTITIES_SET_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                categories: action.payload,\r\n            };\r\n\r\n        case ENTITIES_SET_SINGLE_ENTITY:\r\n            return {\r\n                ...state,\r\n                singleEntity: action.payload,\r\n            };\r\n\r\n        case ENTITIES_SET_SINGLE_ENTITY_OPTION:\r\n            const option = state.singleEntity;\r\n            option[action.payload.entityName] = action.payload.entityVal;\r\n\r\n            return {\r\n                ...state,\r\n                singleEntity: {\r\n                    ...state.singleEntity,\r\n                    ...option,\r\n                },\r\n            };\r\n\r\n        case ENTITIES_SET_SINGLE_ENTITY_ADDITIONAL_OPTION:\r\n            const addOption = {};\r\n            Object.keys(state.singleEntity).forEach((key) => {\r\n                if (key === action.payload) {\r\n                    addOption[action.payload] = !state.singleEntity[key];\r\n                }\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                singleEntity: {\r\n                    ...state.singleEntity,\r\n                    ...addOption,\r\n                },\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n  POPUP_SET_POPUP,\r\n  POPUP_UNSET_POPUP,\r\n} from '../../constants/actionConstants';\r\n\r\nconst initialState = {\r\n    isPopup: false,\r\n    isSuccess: false,\r\n    text: '',\r\n};\r\n\r\nexport const popupReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case POPUP_SET_POPUP:\r\n        return {\r\n          ...state,\r\n          isPopup: true,\r\n          isSuccess: action.payload.isSuccess,\r\n          text: action.payload.text,\r\n        };\r\n\r\n      case POPUP_UNSET_POPUP:\r\n        return initialState;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { loginReducer } from './login/reducers';\r\nimport { userReducer } from './user/reducers';\r\nimport { requestErrorReducer } from './requestError/reducers';\r\nimport { paginationReducer } from './pagination/reducers';\r\nimport { entitiesReducer } from './entities/reducers';\r\nimport { popupReducer } from './popup/reducers';\r\n\r\nexport const rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    user: userReducer,\r\n    requestError: requestErrorReducer,\r\n    pagination: paginationReducer,\r\n    entities: entitiesReducer,\r\n    popup: popupReducer,\r\n});\r\n","import { createStore } from 'redux';\r\n\r\nimport { rootReducer } from './rootReducer';\r\n\r\nexport const store = createStore(rootReducer);\r\n","import {\r\n    USER_LOGIN,\r\n    USER_CHECK,\r\n    USER_LOGOUT,\r\n} from '../../constants/actionConstants';\r\n\r\nexport const userLogin = () => ({\r\n    type: USER_LOGIN,\r\n});\r\n\r\nexport const userCheck = (userName) => ({\r\n    type: USER_CHECK,\r\n    payload: userName,\r\n});\r\n\r\nexport const userLogout = () => ({\r\n    type: USER_LOGOUT,\r\n});\r\n","import {\r\n    LOGIN_CHANGE_EMAIL_TEXT,\r\n    LOGIN_CHANGE_PASSWORD_TEXT,\r\n    LOGIN_SET_EMAIL_ERROR,\r\n    LOGIN_SET_PASSWORD_ERROR,\r\n    LOGIN_SET_IS_NO_REGISTER,\r\n    LOGIN_SET_IS_AUTH_ERROR,\r\n} from '../../constants/actionConstants';\r\n\r\nexport const setEmailText = (email) => ({\r\n    type: LOGIN_CHANGE_EMAIL_TEXT,\r\n    payload: email,\r\n});\r\n\r\nexport const setPasswordText = (password) => ({\r\n    type: LOGIN_CHANGE_PASSWORD_TEXT,\r\n    payload: password,\r\n});\r\n\r\nexport const setEmailError = (isError) => ({\r\n    type: LOGIN_SET_EMAIL_ERROR,\r\n    payload: isError,\r\n});\r\n\r\nexport const setPasswordError = (isError) => ({\r\n    type: LOGIN_SET_PASSWORD_ERROR,\r\n    payload: isError,\r\n});\r\n\r\nexport const setIsNoRegister = (isNoRegister) => ({\r\n    type: LOGIN_SET_IS_NO_REGISTER,\r\n    payload: isNoRegister,\r\n});\r\n\r\nexport const setIsAuthError = (isAuthError) => ({\r\n    type: LOGIN_SET_IS_AUTH_ERROR,\r\n    payload: isAuthError,\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './InputField.scss';\r\n\r\nfunction InputField({\r\n    type,\r\n    inputValue,\r\n    setInputValue,\r\n    label,\r\n    placeholder,\r\n    entityName,\r\n    isError,\r\n    setIsError,\r\n}) {\r\n    const inputFieldClasses = classNames(\r\n        'input_field__value',\r\n        {is_error: isError},\r\n    );\r\n\r\n    const inputError = classNames(\r\n        'input_field__error',\r\n        {active: isError},\r\n    );\r\n\r\n    const handleInputChange = (value) => {\r\n        setInputValue(value, entityName);\r\n        if (value.length && setIsError) setIsError(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"input_field\">\r\n            <label htmlFor={`input_${label}`}>{label}</label>\r\n\r\n            <div className={inputFieldClasses}>\r\n                <input\r\n                    type={type}\r\n                    name={label}\r\n                    id={`input_${label}`}\r\n                    placeholder={placeholder}\r\n                    value={inputValue}\r\n                    onChange={(evt) => handleInputChange(evt.target.value)}\r\n                />\r\n                <div className={inputError}>\r\n                    Обязательное поле\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nInputField.propTypes = {\r\n    type: PropTypes.string,\r\n    inputValue: PropTypes.string,\r\n    setInputValue: PropTypes.func,\r\n    label: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    entityName: PropTypes.string,\r\n    isError: PropTypes.bool,\r\n    setIsError: PropTypes.func,\r\n};\r\n\r\nInputField.defaultProps = {\r\n    type: '',\r\n    inputValue: '',\r\n    setInputValue: null,\r\n    label: '',\r\n    placeholder: '',\r\n    entityName: '',\r\n    isError: false,\r\n    setIsError: null,\r\n};\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nfunction Button({type, title, color, location, onclick, isDisabled}) {\r\n    const btnClasses = classNames(\r\n        'btn',\r\n        `btn--${location}`,\r\n        {[`btn--${color}`]: color},\r\n    );\r\n\r\n    return (\r\n        <input\r\n            type={type}\r\n            value={title}\r\n            className={btnClasses}\r\n            onClick={onclick}\r\n            disabled={isDisabled}\r\n        />\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    color: PropTypes.string,\r\n    location: PropTypes.string,\r\n    onclick: PropTypes.func,\r\n    isDisabled: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n    type: '',\r\n    title: '',\r\n    color: '',\r\n    location: '',\r\n    onclick: null,\r\n    isDisabled: false,\r\n};\r\n\r\nexport default Button;\r\n","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { setIsNoRegister } from '../../../store/login/actionCreators';\r\n\r\nimport './RegisterLink.scss';\r\n\r\nfunction RegisterLink() {\r\n    const { isNoRegister } = useSelector((state) => state.login);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleRegisterClick = (evt) => {\r\n        evt.preventDefault();\r\n        dispatch(setIsNoRegister(true));\r\n    };\r\n\r\n    const registerErrorClasses = classNames(\r\n        'login_form__register_error',\r\n        {active: isNoRegister},\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (isNoRegister) {\r\n            setTimeout(() => {\r\n                dispatch(setIsNoRegister(false));\r\n            }, 2000);\r\n        }\r\n    }, [isNoRegister]);\r\n\r\n    return (\r\n        <div>\r\n            <a\r\n                href=\"#!\"\r\n                className=\"login_form__register\"\r\n                onClick={handleRegisterClick}\r\n            >\r\n                Запросить доступ\r\n            </a>\r\n            <div className={registerErrorClasses}>\r\n                Извините, регистрация временно недоступна...\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterLink;\r\n","const API_KEY = '5e25c641099b810b946c5d5b';\r\nconst SECRET = '4cbcea96de';\r\n\r\nconst DOMAIN_URL = 'https://api-factory.simbirsoft1.com';\r\n\r\nconst LOGIN_URL = `${DOMAIN_URL}/api/auth/login`;\r\nconst CHECK_URL = `${DOMAIN_URL}/api/auth/check`;\r\nconst LOGOUT_URL = `${DOMAIN_URL}/api/auth/logout`;\r\n\r\nconst ITEMS_PER_PAGE = 10;\r\n\r\nconst API_DB_URL = `${DOMAIN_URL}/api/db`;\r\n\r\nconst ORDERS_DB = 'order';\r\n\r\nconst STATUSES_DB = 'orderStatus';\r\n\r\nconst CARS_DB = 'car';\r\n\r\nconst CITIES_DB = 'city';\r\n\r\nconst POINTS_DB = 'point';\r\n\r\nconst CATEGORIES_DB = 'category';\r\n\r\nconst DEFAULT_HEADERS = {\r\n    'X-Api-Factory-Application-Id': API_KEY,\r\n};\r\n\r\nexport {\r\n    DOMAIN_URL,\r\n    DEFAULT_HEADERS,\r\n    SECRET,\r\n    LOGIN_URL,\r\n    CHECK_URL,\r\n    LOGOUT_URL,\r\n    ITEMS_PER_PAGE,\r\n    API_DB_URL,\r\n    ORDERS_DB,\r\n    STATUSES_DB,\r\n    CARS_DB,\r\n    CITIES_DB,\r\n    POINTS_DB,\r\n    CATEGORIES_DB,\r\n};\r\n","/* eslint-disable react/jsx-filename-extension */ // ошибка линтера\r\n\r\nimport React from 'react';\r\n\r\nexport const SYMBOLS = 'QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm1234567890';\r\n\r\nexport const MENU_ITEMS = [\r\n    {\r\n        title: 'Карточка автомобиля',\r\n        path: '/admin/createCar',\r\n        img:\r\n            <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.3213 2.10853C11.5596 2.34683 11.5596 2.73177 11.3213 2.97007L10.2031 4.08825L7.91174 1.7969L9.02992 0.678725C9.26822 0.440425 9.65317 0.440425 9.89147 0.678725L11.3213 2.10853ZM0.5 11.5V9.20865L7.25795 2.4507L9.5493 4.74205L2.79135 11.5H0.5Z\" fill=\"#007BFF\"/>\r\n            </svg>,\r\n    },\r\n    {\r\n        title: 'Список авто',\r\n        path: '/admin/car',\r\n        img:\r\n            <svg width=\"13\" height=\"10\" viewBox=\"0 0 13 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.5 0.5V1.85714H5.83333V0.5H0.5ZM5.83333 4.57142H0.5V3.21428H5.83333V4.57142ZM0.5 7.28572H5.83333V5.92857H0.5V7.28572ZM0.5 10H5.83333V8.64285H0.5V10ZM12.5 0.5H7.16663V10H12.5V0.5Z\" fill=\"#CACEDB\"/>\r\n            </svg>,\r\n    },\r\n    {\r\n        title: 'Заказы',\r\n        path: '/admin/order',\r\n        img:\r\n            <svg width=\"9\" height=\"10\" viewBox=\"0 0 9 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.5 0H1.5C0.95 0 0.505 0.45 0.505 1L0.5 9C0.5 9.55 0.945 10 1.495 10H7.5C8.05 10 8.5 9.55 8.5 9V3L5.5 0ZM6.5 7H5V8.5H4V7H2.5V6H4V4.5H5V6H6.5V7ZM5 0.75V3.5H7.75L5 0.75Z\" fill=\"#CACEDB\"/>\r\n            </svg>,\r\n    },\r\n    {\r\n        title: 'Пункты выдачи',\r\n        path: '/admin/point',\r\n        img:\r\n            <svg width=\"13\" height=\"14\" viewBox=\"0 0 13 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.8949 2H2.60538C1.99749 2 1.50012 2.5 1.50012 3.11111V4.77778H12.0001V3.11111C12.0001 2.5 11.5028 2 10.8949 2ZM10.8947 12H9.23682V5.88889H12V10.8889C12 11.5 11.5026 12 10.8947 12ZM8.13157 5.9H5.36841V12H8.13157V5.9ZM2.60526 12C1.99737 12 1.5 11.5 1.5 10.8889V5.88889H4.26316V12H2.60526Z\" fill=\"#CACEDB\"/>\r\n            </svg>,\r\n    },\r\n    {\r\n        title: 'Новый пункт выдачи',\r\n        path: '/admin/createPoint',\r\n        img:\r\n            <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.3213 2.10853C11.5596 2.34683 11.5596 2.73177 11.3213 2.97007L10.2031 4.08825L7.91174 1.7969L9.02992 0.678725C9.26822 0.440425 9.65317 0.440425 9.89147 0.678725L11.3213 2.10853ZM0.5 11.5V9.20865L7.25795 2.4507L9.5493 4.74205L2.79135 11.5H0.5Z\" fill=\"#007BFF\"/>\r\n            </svg>,\r\n    },\r\n    {\r\n        title: 'Категории авто',\r\n        path: '/admin/category',\r\n        img:\r\n            <svg width=\"13\" height=\"11\" viewBox=\"0 0 13 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.17647 5.11538H0.5V0.5H4.17647V5.11538ZM4.17647 10.5H0.5V5.88461H4.17647V10.5ZM4.91174 10.5H8.58821V5.88461H4.91174V10.5ZM13 10.5H9.32349V5.88461H13V10.5ZM4.91174 5.11538H8.58821V0.5H4.91174V5.11538ZM9.32349 5.11538V0.5H13V5.11538H9.32349Z\" fill=\"#CACEDB\"/>\r\n            </svg>,\r\n    },\r\n    {\r\n        title: 'Новая категория',\r\n        path: '/admin/createCategory',\r\n        img:\r\n            <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.3213 2.10853C11.5596 2.34683 11.5596 2.73177 11.3213 2.97007L10.2031 4.08825L7.91174 1.7969L9.02992 0.678725C9.26822 0.440425 9.65317 0.440425 9.89147 0.678725L11.3213 2.10853ZM0.5 11.5V9.20865L7.25795 2.4507L9.5493 4.74205L2.79135 11.5H0.5Z\" fill=\"#007BFF\"/>\r\n            </svg>,\r\n    },\r\n    {\r\n        title: 'Список городов',\r\n        path: '/admin/city',\r\n        img:\r\n            <svg width=\"13\" height=\"10\" viewBox=\"0 0 13 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0.5 0.5V1.85714H5.83333V0.5H0.5ZM5.83333 4.57142H0.5V3.21428H5.83333V4.57142ZM0.5 7.28572H5.83333V5.92857H0.5V7.28572ZM0.5 10H5.83333V8.64285H0.5V10ZM12.5 0.5H7.16663V10H12.5V0.5Z\" fill=\"#CACEDB\"/>\r\n            </svg>,\r\n    },\r\n    {\r\n        title: 'Новый город',\r\n        path: '/admin/createCity',\r\n        img:\r\n            <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.3213 2.10853C11.5596 2.34683 11.5596 2.73177 11.3213 2.97007L10.2031 4.08825L7.91174 1.7969L9.02992 0.678725C9.26822 0.440425 9.65317 0.440425 9.89147 0.678725L11.3213 2.10853ZM0.5 11.5V9.20865L7.25795 2.4507L9.5493 4.74205L2.79135 11.5H0.5Z\" fill=\"#007BFF\"/>\r\n            </svg>,\r\n    },\r\n];\r\n\r\nconst now = Date.now();\r\nconst dayMs = 1000 * 60 * 60 * 24;\r\nconst weekMs = dayMs * 7;\r\nconst monthMs = dayMs * 30;\r\nconst yearMs = dayMs * 365;\r\n\r\nexport const PERIODS = [\r\n    {name: 'За неделю', dateFrom: now - weekMs},\r\n    {name: 'За месяц', dateFrom: now - monthMs},\r\n    {name: 'За год', dateFrom: now - yearMs},\r\n    {name: 'За сутки', dateFrom: now - dayMs},\r\n];\r\n\r\nexport const PRELOADER_ITEMS_ARR = [1, 2, 3, 4, 5];\r\n","import {SYMBOLS} from '../constants/commonConstants';\r\nimport { DOMAIN_URL } from '../constants/fetchConstants';\r\n\r\nexport function createRandomString(size = 7) {\r\n    let randomString = '';\r\n    while (randomString.length <= size) {\r\n        randomString += SYMBOLS[Math.floor(Math.random() * SYMBOLS.length)];\r\n    }\r\n    return randomString;\r\n}\r\n\r\nexport const getImgSrc = (entityObj) => {\r\n    let src = '';\r\n\r\n    if (entityObj && entityObj.thumbnail) {\r\n        src = entityObj.thumbnail.path.includes('data')\r\n            ? entityObj.thumbnail.path\r\n            : `${DOMAIN_URL}${entityObj.thumbnail.path}`;\r\n    } else {\r\n        src = 'https://via.placeholder.com/138x63';\r\n    }\r\n\r\n    return src;\r\n};\r\n\r\nexport const replaceDateFormat = (date) => {\r\n    const options = {\r\n        year: 'numeric',\r\n        month: 'numeric',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n    };\r\n    const newDate = new Date(date);\r\n    const dateStr = newDate.toLocaleString('ru', options);\r\n    return dateStr.replace(/,/g, '');\r\n};\r\n\r\nexport function setSearchParams(paramsArr) {\r\n    const searchParams = new URLSearchParams();\r\n    paramsArr.forEach((key) => {\r\n        if (key.paramValue !== null) {\r\n            if (!key.paramName.includes('Id')) {\r\n                searchParams.set(`${key.paramName}[$gt]`, key.paramValue);\r\n            } else {\r\n                searchParams.set(key.paramName, key.paramValue);\r\n            }\r\n        } else {\r\n            searchParams.delete(key.paramName);\r\n        }\r\n    });\r\n\r\n    return searchParams;\r\n}\r\n\r\nexport function getSearchParam(location, searchParam) {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const paramId = searchParams.get(searchParam);\r\n    return paramId;\r\n}\r\n\r\nexport const changeNumberFormat = (str) => {\r\n    if (str) {\r\n        const strArr = str.split('');\r\n        strArr[0] += ' ';\r\n        strArr[3] += ' ';\r\n        strArr[5] = strArr[5] ? `${strArr[5]} ` : null;\r\n        return strArr.join('');\r\n    }\r\n    return '';\r\n};\r\n","import {\r\n    DEFAULT_HEADERS,\r\n    SECRET,\r\n    LOGIN_URL,\r\n    CHECK_URL,\r\n    LOGOUT_URL,\r\n    ITEMS_PER_PAGE,\r\n    API_DB_URL,\r\n} from '../constants/fetchConstants';\r\n\r\nimport { createRandomString } from './commonUtils';\r\n\r\nfunction addHeaders(headers, options) {\r\n    const newHeaders = options.headers ? {...options.headers, ...headers} : headers;\r\n    return { ...options, headers: newHeaders};\r\n}\r\n\r\nconst doFetch = async (url, options = {}) => {\r\n    const newOptions = addHeaders(DEFAULT_HEADERS, options);\r\n\r\n    let response;\r\n\r\n    try {\r\n        response = await fetch(url, newOptions);\r\n    } catch (err) {\r\n        console.error('Возникла проблема с запросом: ', err);\r\n        return Promise.reject(new Error(err.message));\r\n    }\r\n\r\n    if (!response.ok) {\r\n        const text = await response.text();\r\n        return Promise.reject({httpStatus: response.status, httpText: text});\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nconst getAuthHeader = () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    return {Authorization: `Bearer ${accessToken}`};\r\n};\r\n\r\nexport async function login(emailValue, passwordValue) {\r\n    const salt = createRandomString(5, true);\r\n    const basic = window.btoa(`${salt}:${SECRET}`);\r\n\r\n    const options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Basic ${basic}`,\r\n        },\r\n        body: JSON.stringify({username: emailValue, password: passwordValue}),\r\n        method: 'POST',\r\n    };\r\n\r\n    const response = await doFetch(LOGIN_URL, options);\r\n    return {\r\n        access_token: response.access_token,\r\n        refresh_token: response.refresh_token,\r\n    };\r\n}\r\n\r\nexport async function checkUser() {\r\n    const options = {\r\n        headers: getAuthHeader(),\r\n    };\r\n\r\n    const response = await doFetch(CHECK_URL, options);\r\n    return response;\r\n}\r\n\r\nexport async function logout() {\r\n    const options = {\r\n        headers: getAuthHeader(),\r\n        method: 'POST',\r\n    };\r\n\r\n    const response = await doFetch(LOGOUT_URL, options);\r\n    return response;\r\n}\r\n\r\nexport async function getEntityList(entityName, searchParamsStr, page) {\r\n    const options = {\r\n        headers: getAuthHeader(),\r\n    };\r\n\r\n    let url = `${API_DB_URL}/${entityName}`;\r\n\r\n    if (searchParamsStr && searchParamsStr.length) {\r\n        url += `${searchParamsStr}`;\r\n        url = page ? `${url}&page=${page - 1}&limit=${ITEMS_PER_PAGE}` : url;\r\n    } else {\r\n        url = page ? `${url}?page=${page - 1}&limit=${ITEMS_PER_PAGE}` : url;\r\n    }\r\n\r\n    const response = await doFetch(url, options);\r\n    return response;\r\n}\r\n\r\nexport async function getSingleEntity(entityName, id = '') {\r\n    const options = {\r\n        headers: getAuthHeader(),\r\n    };\r\n\r\n    const response = await doFetch(`${API_DB_URL}/${entityName}/${id}`, options);\r\n    return response;\r\n}\r\n\r\nexport async function createEntity(entityName, entityObj) {\r\n    const options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...getAuthHeader(),\r\n        },\r\n        body: JSON.stringify(entityObj),\r\n        method: 'POST',\r\n    };\r\n\r\n    const response = await doFetch(`${API_DB_URL}/${entityName}`, options);\r\n    return response;\r\n}\r\n\r\nexport async function changeEntity(entityName, entityObj) {\r\n    const options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...getAuthHeader(),\r\n        },\r\n        method: 'PUT',\r\n        body: JSON.stringify(entityObj),\r\n    };\r\n\r\n    const response = await doFetch(`${API_DB_URL}/${entityName}/${entityObj.id}`, options);\r\n    return response;\r\n}\r\n\r\nexport async function deleteEntity(entityName, id) {\r\n    const options = {\r\n        headers: getAuthHeader(),\r\n        method: 'DELETE',\r\n    };\r\n\r\n    const response = await doFetch(`${API_DB_URL}/${entityName}/${id}`, options);\r\n    return response;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo_icon.bc4f3ee8.svg\";","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport {\r\n    setEmailText,\r\n    setPasswordText,\r\n    setEmailError,\r\n    setPasswordError,\r\n    setIsAuthError,\r\n} from '../../../store/login/actionCreators';\r\n\r\nimport InputField from '../../layouts/InputField';\r\nimport Button from '../../layouts/Button';\r\nimport RegisterLink from '../../layouts/RegisterLink';\r\n\r\nimport { login, checkUser } from '../../../utils/apiUtils';\r\nimport { userLogin, userCheck } from '../../../store/user/actionCreators';\r\n\r\nimport icon from '../../../assets/images/logo_icon.svg';\r\n\r\nimport './LoginPage.scss';\r\n\r\nfunction LoginPage() {\r\n    const {\r\n        email,\r\n        password,\r\n        isAuthError,\r\n    } = useSelector((state) => state.login);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAuthClick = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (!email.emailValue.length) dispatch(setEmailError(true));\r\n        if (!password.passwordValue.length) dispatch(setPasswordError(true));\r\n        if (!email.emailValue.length || !password.passwordValue.length) return;\r\n\r\n        login(email.emailValue, password.passwordValue)\r\n            .then((res) => {\r\n                if (res.access_token) localStorage.setItem('access_token', res.access_token);\r\n                if (res.refresh_token) localStorage.setItem('refresh_token', res.refresh_token);\r\n                dispatch(userLogin());\r\n                checkUser(res.access_token)\r\n                    .then((response) => dispatch(userCheck(response.username)));\r\n            })\r\n            .catch((err) => {\r\n                if (err.httpStatus === 401) {\r\n                    console.error('Неверный логин или пароль! ', err);\r\n                    dispatch(setIsAuthError(true));\r\n                }\r\n            });\r\n    };\r\n\r\n    const authErrorClasses = classNames(\r\n        'login_form__auth_error',\r\n        {active: isAuthError},\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (isAuthError) {\r\n            setTimeout(() => {\r\n                dispatch(setIsAuthError(false));\r\n            }, 3000);\r\n        }\r\n    }, [isAuthError]);\r\n\r\n    const setEmailValue = (emailValue) => {\r\n        dispatch(setEmailText(emailValue));\r\n    };\r\n\r\n    const setPasswordValue = (passwordValue) => {\r\n        dispatch(setPasswordText(passwordValue));\r\n    };\r\n\r\n    const setIsEmailError = (isError) => {\r\n        dispatch(setEmailError(isError));\r\n    };\r\n\r\n    const setIsPasswordError = (isError) => {\r\n        dispatch(setPasswordError(isError));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__head\">\r\n                <div className=\"login__icon\">\r\n                    <img src={icon} alt=\"icon\" />\r\n                </div>\r\n                <h1 className=\"login__heading\">Need for drive</h1>\r\n            </div>\r\n\r\n            <form className=\"login_form\">\r\n                <h2 className=\"login_form__heading\">Вход</h2>\r\n\r\n                <InputField\r\n                  type=\"text\"\r\n                  inputValue={email.emailValue}\r\n                  setInputValue={setEmailValue}\r\n                  label=\"Почта\"\r\n                  placeholder=\"Введите почту\"\r\n                  isError={email.isEmailError}\r\n                  setIsError={setIsEmailError}\r\n                />\r\n\r\n                <InputField\r\n                  type=\"password\"\r\n                  inputValue={password.passwordValue}\r\n                  setInputValue={setPasswordValue}\r\n                  label=\"Пароль\"\r\n                  placeholder=\"Введите пароль\"\r\n                  isError={password.isPasswordError}\r\n                  setIsError={setIsPasswordError}\r\n                />\r\n\r\n                <div className=\"login_form__btns\">\r\n                    <RegisterLink/>\r\n                    <Button\r\n                        type=\"button\"\r\n                        title=\"Войти\"\r\n                        color=\"blue\"\r\n                        onclick={handleAuthClick}\r\n                    />\r\n                </div>\r\n\r\n                <div className={authErrorClasses}>\r\n                    Неверный логин или пароль!\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","import {\r\n    POPUP_SET_POPUP,\r\n    POPUP_UNSET_POPUP,\r\n} from '../../constants/actionConstants';\r\n\r\nexport const setPopup = (isSuccess, text) => ({\r\n    type: POPUP_SET_POPUP,\r\n    payload: {isSuccess, text},\r\n});\r\n\r\nexport const unsetPopup = () => ({\r\n    type: POPUP_UNSET_POPUP,\r\n});\r\n","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { unsetPopup } from '../../../store/popup/actionCreators';\r\n\r\nimport './Popup.scss';\r\n\r\nfunction Popup() {\r\n    const {isPopup, isSuccess, text} = useSelector((state) => state.popup);\r\n    const dispatch = useDispatch();\r\n\r\n    const popupClasses = classNames(\r\n        'popup',\r\n        {\r\n            active: isPopup,\r\n            'popup--success': isSuccess,\r\n        },\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (isPopup) {\r\n            setTimeout(() => {\r\n                dispatch(unsetPopup());\r\n            }, 10000);\r\n        }\r\n    }, [isPopup]);\r\n\r\n    const handleClosePopup = () => {\r\n        dispatch(unsetPopup());\r\n    };\r\n\r\n    return (\r\n        <div className={popupClasses}>\r\n            <div className=\"popup__info\">\r\n                {\r\n                    isSuccess\r\n                    && (\r\n                        <span className=\"popup__done_icon\">\r\n                            <svg width=\"13\" height=\"10\" viewBox=\"0 0 8 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2.75 4.73828L7.16406 0.324219L7.75 0.910156L2.75 5.91016L0.425781 3.58594L1.01172 3L2.75 4.73828Z\" fill=\"#121212\"/>\r\n                            </svg>\r\n                        </span>\r\n                    )\r\n                }\r\n                {text}\r\n            </div>\r\n            <span\r\n                className=\"popup__close_icon\"\r\n                onClick={handleClosePopup}\r\n                onKeyDown={handleClosePopup}\r\n                role=\"button\"\r\n                tabIndex=\"0\"\r\n                aria-label=\"close popup\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popup;\r\n","export default __webpack_public_path__ + \"static/media/avatar.ee177700.jpg\";","import React, {useState, useEffect, useRef} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport InputField from '../InputField';\r\nimport Popup from '../Popup';\r\n\r\nimport { userLogout } from '../../../store/user/actionCreators';\r\n\r\nimport avatarSrc from '../../../assets/images/avatar.jpg';\r\n\r\nimport './Header.scss';\r\n\r\nfunction Header() {\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [isActiveDropdown, setIsActiveDropdown] = useState(false);\r\n    const [notificationCount, setNotificationCount] = useState(0);\r\n\r\n    const timerIdRef = useRef(null);\r\n\r\n    const {name} = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const dropdownIconClasses = classNames(\r\n        'user_account__dropdown_icon',\r\n        {active: isActiveDropdown},\r\n    );\r\n\r\n    const dropdownMenuClasses = classNames(\r\n        'user_account__dropdown_menu',\r\n        'dropdown_menu',\r\n        {active: isActiveDropdown},\r\n    );\r\n\r\n    const handleDropdownClick = () => {\r\n        setIsActiveDropdown((prevIsActiveDropdown) => (\r\n            !prevIsActiveDropdown\r\n        ));\r\n    };\r\n\r\n    const handleLogoutClick = () => {\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('refresh_token');\r\n        dispatch(userLogout());\r\n    };\r\n\r\n    useEffect(() => {\r\n        timerIdRef.current = setInterval(() => {\r\n            setNotificationCount((prevCount) => prevCount + 1);\r\n        }, 2000);\r\n    }, notificationCount);\r\n\r\n    const handleNotificationsClick = () => {\r\n        setNotificationCount(0);\r\n        clearInterval(timerIdRef.current);\r\n    };\r\n\r\n    return (\r\n        <header className=\"page_header\">\r\n            <div className=\"page_header__search search\">\r\n                <span\r\n                    className=\"search__search_btn\"\r\n                >\r\n                    <svg width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.87336 8.80503H10.5057L14.5 12.8073L13.3073 14L9.30503 10.0057V9.37336L9.08891 9.14923C8.17639 9.93368 6.99171 10.4059 5.70297 10.4059C2.82933 10.4059 0.5 8.07662 0.5 5.20297C0.5 2.32933 2.82933 0 5.70297 0C8.57662 0 10.9059 2.32933 10.9059 5.20297C10.9059 6.49171 10.4337 7.67639 9.64923 8.58891L9.87336 8.80503ZM2.19702 5.30302C2.19702 7.29837 3.80773 8.90908 5.80308 8.90908C7.79844 8.90908 9.40914 7.29837 9.40914 5.30302C9.40914 3.30767 7.79844 1.69696 5.80308 1.69696C3.80773 1.69696 2.19702 3.30767 2.19702 5.30302Z\" fill=\"#CACEDB\"/>\r\n                    </svg>\r\n                </span>\r\n                <InputField\r\n                    type=\"search\"\r\n                    inputValue={searchValue}\r\n                    setInputValue={setSearchValue}\r\n                    placeholder=\"Поиск ...\"\r\n                />\r\n            </div>\r\n            <div\r\n                className=\"page_header__notifications notifications\"\r\n                onClick={handleNotificationsClick}\r\n                onKeyDown={handleNotificationsClick}\r\n                role=\"button\"\r\n                tabIndex=\"0\"\r\n                aria-label=\"notifications count\"\r\n            >\r\n                <span className=\"notifications__icon\">\r\n                    <svg width=\"18\" height=\"21\" viewBox=\"0 0 18 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.375 9.04949V14.3727L17.5 16.502V17.5667H0.5V16.502L2.625 14.3727V9.04949C2.625 5.77038 4.35687 3.04489 7.40625 2.32093V1.59697C7.40625 0.713313 8.11812 0 9 0C9.88188 0 10.5938 0.713313 10.5938 1.59697V2.32093C13.6325 3.04489 15.375 5.78103 15.375 9.04949ZM11.2667 18.7C11.2667 19.9467 10.2467 20.9667 9 20.9667C7.742 20.9667 6.73334 19.9467 6.73334 18.7H11.2667Z\" fill=\"#818EA3\"/>\r\n                    </svg>\r\n                </span>\r\n                {notificationCount > 0 && <div className=\"notifications__count\">{notificationCount}</div>}\r\n            </div>\r\n            <div\r\n                className=\"page_header__user user_account\"\r\n                onClick={handleDropdownClick}\r\n                onKeyDown={handleDropdownClick}\r\n                role=\"button\"\r\n                tabIndex=\"0\"\r\n                aria-label=\"dropdown menu\"\r\n            >\r\n                <img className=\"user_account__avatar\" src={avatarSrc} alt=\"user_avatar\" />\r\n                <span className=\"user_account__name\">{name}</span>\r\n                <span\r\n                    className={dropdownIconClasses}\r\n                />\r\n                <div className={dropdownMenuClasses}>\r\n                    <ul className=\"dropdown_menu__list\">\r\n                        <li className=\"dropdown_menu__item\">\r\n                            <a\r\n                                href=\"#!\"\r\n                                onClick={handleLogoutClick}\r\n                            >\r\n                                Выход\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <Popup/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","/* eslint-disable react/jsx-one-expression-per-line */ // ошибка линтера\r\n\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Footer.scss';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"page_footer\">\r\n          <div className=\"page_footer__links\">\r\n            <Link to=\"/admin\">Главная страница</Link>\r\n            <a\r\n              href=\"https://github.com/PVthfinder\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              GitHub\r\n            </a>\r\n          </div>\r\n          <div className=\"page_footer__copyright\">\r\n            Copyright &copy; {new Date().getFullYear()} Simbirsoft\r\n          </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction MenuItem({img, path, title}) {\r\n    return (\r\n        <NavLink\r\n            exact\r\n            to={path}\r\n            className=\"menu__item\"\r\n            activeClassName=\"menu__active_menu_item\"\r\n        >\r\n            {img}\r\n            {title}\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nMenuItem.propTypes = {\r\n    img: PropTypes.objectOf(PropTypes.any),\r\n    path: PropTypes.string,\r\n    title: PropTypes.string,\r\n};\r\n\r\nMenuItem.defaultProps = {\r\n    img: '',\r\n    path: '',\r\n    title: '',\r\n};\r\n\r\nexport default MenuItem;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport MenuItem from './MenuItem';\r\n\r\nimport icon from '../../../assets/images/logo_icon.svg';\r\n\r\nimport {MENU_ITEMS} from '../../../constants/commonConstants';\r\n\r\nimport './Menu.scss';\r\n\r\nfunction Menu() {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <Link\r\n            to=\"/admin\"\r\n                className=\"menu__head\"\r\n            >\r\n                <div className=\"menu__icon\">\r\n                    <img src={icon} alt=\"icon\" />\r\n                </div>\r\n                <h1 className=\"menu__heading\">Need for drive</h1>\r\n            </Link>\r\n            <div className=\"menu__items\">\r\n                {MENU_ITEMS.map((item) => (\r\n                    <MenuItem\r\n                        key={item.title}\r\n                        img={item.img}\r\n                        path={item.path}\r\n                        title={item.title}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import {\r\n    REQUEST_ERROR_SET_ERROR,\r\n    REQUEST_ERROR_UNSET_ERROR,\r\n} from '../../constants/actionConstants';\r\n\r\nexport const setRequestError = (errorStatus) => ({\r\n    type: REQUEST_ERROR_SET_ERROR,\r\n    payload: errorStatus,\r\n});\r\n\r\nexport const unsetRequestError = () => ({\r\n    type: REQUEST_ERROR_UNSET_ERROR,\r\n});\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Button from '../layouts/Button';\r\n\r\nimport { unsetRequestError } from '../../store/requestError/actionCreators';\r\n\r\nimport './RequestError.scss';\r\n\r\nfunction RequestError() {\r\n    const {errorStatus} = useSelector((state) => state.requestError);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n    const handleBackClick = () => {\r\n        dispatch(unsetRequestError());\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <div className=\"error_block\">\r\n            <span className=\"error_block__status\">{errorStatus}</span>\r\n            <span className=\"error_block__desc\">Что-то пошло не так</span>\r\n            <span className=\"error_block__suggestion\">Попробуйте перезагрузить страницу</span>\r\n            <Button\r\n                type=\"button\"\r\n                title=\"Назад\"\r\n                location=\"request_error\"\r\n                onclick={handleBackClick}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RequestError;\r\n","import React, {useState} from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Selector.scss';\r\n\r\nfunction Selector({\r\n    label,\r\n    title,\r\n    entityName,\r\n    chosenItem,\r\n    setChosen,\r\n    selectorArr,\r\n    isError,\r\n}) {\r\n    const [activeSelector, setActiveSelector] = useState(false);\r\n\r\n    const chooseHandler = (item) => {\r\n        setChosen(item, entityName);\r\n        setActiveSelector(false);\r\n    };\r\n\r\n    const selectorClasses = classNames(\r\n        'selector',\r\n        {error: isError},\r\n    );\r\n\r\n    const selectorOptionsClasses = classNames(\r\n        'selector__options',\r\n        {active: activeSelector},\r\n    );\r\n\r\n    const selectorIconClasses = classNames(\r\n        'selector__icon',\r\n        {active: activeSelector},\r\n    );\r\n\r\n    const handleDropdownClick = () => {\r\n        setActiveSelector((prevActiveSelector) => (\r\n            !prevActiveSelector\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div className=\"selector_block\">\r\n            <div className=\"selector_label\">\r\n                {label}\r\n            </div>\r\n            <div className={selectorClasses}>\r\n                <div className=\"selector__choose\">\r\n                    {chosenItem && chosenItem.length > 0 ? chosenItem : `Выберите ${title}`}\r\n                </div>\r\n\r\n                <ul className={selectorOptionsClasses}>\r\n                    {selectorArr && selectorArr.map((item) => (\r\n                        <li\r\n                            key={item.id ?? item.name}\r\n                            onClick={() => chooseHandler(item)}\r\n                            onKeyDown={() => chooseHandler(item)}\r\n                            role=\"option\"\r\n                            tabIndex=\"0\"\r\n                            aria-selected={false}\r\n                        >\r\n                            {item.name}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n\r\n                <div\r\n                    className=\"selector__button\"\r\n                    onClick={handleDropdownClick}\r\n                    onKeyDown={handleDropdownClick}\r\n                    role=\"button\"\r\n                    tabIndex=\"0\"\r\n                    aria-label=\"dropdown selector\"\r\n                >\r\n                    <span className={selectorIconClasses}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nSelector.propTypes = {\r\n    label: PropTypes.string,\r\n    title: PropTypes.string,\r\n    entityName: PropTypes.string,\r\n    chosenItem: PropTypes.string,\r\n    setChosen: PropTypes.func,\r\n    selectorArr: PropTypes.arrayOf(PropTypes.any),\r\n    isError: PropTypes.bool,\r\n};\r\n\r\nSelector.defaultProps = {\r\n    label: '',\r\n    title: '',\r\n    entityName: '',\r\n    chosenItem: '',\r\n    setChosen: null,\r\n    selectorArr: [],\r\n    isError: false,\r\n};\r\n\r\nexport default Selector;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nimport Selector from '../layouts/Selector';\r\nimport Button from '../layouts/Button';\r\n\r\nimport { setSearchParams, getSearchParam } from '../../utils/commonUtils';\r\nimport { getSingleEntity } from '../../utils/apiUtils';\r\n\r\nimport { PERIODS } from '../../constants/commonConstants';\r\nimport { CARS_DB, CITIES_DB, STATUSES_DB } from '../../constants/fetchConstants';\r\n\r\nfunction OrderFilters() {\r\n    const {statuses, cars, cities} = useSelector((state) => state.entities);\r\n    const location = useLocation();\r\n    const {pathname} = useLocation();\r\n    const {push} = useHistory();\r\n\r\n    const [chosenPeriod, setChosenPeriod] = useState(null);\r\n    const [chosenCar, setChosenCar] = useState(null);\r\n    const [chosenCity, setChosenCity] = useState(null);\r\n    const [chosenStatus, setChosenStatus] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const dateFromVal = getSearchParam(location, 'dateFrom[$gt]');\r\n        const carIdVal = getSearchParam(location, 'carId');\r\n        const cityIdVal = getSearchParam(location, 'cityId');\r\n        const orderStatusIdVal = getSearchParam(location, 'orderStatusId');\r\n\r\n        const newChosenPeriod = dateFromVal\r\n            ? PERIODS.find((item) => item.dateFrom === dateFromVal)\r\n            : null;\r\n        setChosenPeriod(newChosenPeriod);\r\n        if (carIdVal) {\r\n            getSingleEntity(CARS_DB, getSearchParam(location, 'carId'))\r\n                .then((data) => (data ? setChosenCar(data.data) : null));\r\n        }\r\n        if (cityIdVal) {\r\n            getSingleEntity(CITIES_DB, getSearchParam(location, 'cityId'))\r\n                .then((data) => (data ? setChosenCity(data.data) : null));\r\n        }\r\n        if (orderStatusIdVal) {\r\n            getSingleEntity(STATUSES_DB, getSearchParam(location, 'orderStatusId'))\r\n                .then((data) => (data ? setChosenStatus(data.data) : null));\r\n        }\r\n    }, []);\r\n\r\n    const handlePeriodChange = (period) => {\r\n        setChosenPeriod(period);\r\n    };\r\n\r\n    const handleCarChange = (car) => {\r\n        setChosenCar(car);\r\n    };\r\n\r\n    const handleCityChange = (city) => {\r\n        setChosenCity(city);\r\n    };\r\n\r\n    const handleStatusChange = (status) => {\r\n        setChosenStatus(status);\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        const paramsArr = [\r\n            {paramName: 'dateFrom', paramValue: chosenPeriod && chosenPeriod.dateFrom},\r\n            {paramName: 'carId', paramValue: chosenCar && chosenCar.id},\r\n            {paramName: 'cityId', paramValue: chosenCity && chosenCity.id},\r\n            {paramName: 'orderStatusId', paramValue: chosenStatus && chosenStatus.id},\r\n        ];\r\n        const searchParams = setSearchParams(paramsArr);\r\n        push({pathname, search: `${searchParams}`});\r\n    };\r\n\r\n    const handleCancelFilters = () => {\r\n        setChosenPeriod(null);\r\n        setChosenCar(null);\r\n        setChosenCity(null);\r\n        setChosenStatus(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"admin_article__filters\">\r\n                <Selector\r\n                    title=\"период\"\r\n                    chosenItem={chosenPeriod && chosenPeriod.name}\r\n                    setChosen={handlePeriodChange}\r\n                    selectorArr={PERIODS}\r\n                />\r\n                <Selector\r\n                    title=\"модель машины\"\r\n                    chosenItem={chosenCar && chosenCar.name}\r\n                    setChosen={handleCarChange}\r\n                    selectorArr={cars}\r\n                />\r\n                <Selector\r\n                    title=\"город\"\r\n                    chosenItem={chosenCity && chosenCity.name}\r\n                    setChosen={handleCityChange}\r\n                    selectorArr={cities}\r\n                />\r\n                <Selector\r\n                    title=\"статус\"\r\n                    chosenItem={chosenStatus && chosenStatus.name}\r\n                    setChosen={handleStatusChange}\r\n                    selectorArr={statuses}\r\n                />\r\n            </div>\r\n            <div className=\"admin_article__filter_btns\">\r\n                <Button\r\n                    type=\"button\"\r\n                    title=\" Применить\"\r\n                    color=\"blue\"\r\n                    location=\"admin_article_header\"\r\n                    onclick={applyFilters}\r\n                />\r\n                <Button\r\n                    type=\"button\"\r\n                    title=\" Сбросить\"\r\n                    location=\"admin_article_header\"\r\n                    color=\"red\"\r\n                    onclick={handleCancelFilters}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderFilters;\r\n","import {\r\n    PAGINATION_SET_CURRENT_PAGE,\r\n    PAGINATION_SET_COUNT_PAGES,\r\n    PAGINATION_SET_NEXT_PAGE,\r\n    PAGINATION_SET_PREV_PAGE,\r\n} from '../../constants/actionConstants';\r\n\r\nexport const setCountPages = (count) => ({\r\n    type: PAGINATION_SET_COUNT_PAGES,\r\n    payload: count,\r\n});\r\n\r\nexport const setCurrentPage = (pageNumber) => ({\r\n    type: PAGINATION_SET_CURRENT_PAGE,\r\n    payload: pageNumber,\r\n});\r\n\r\nexport const setNextPage = () => ({\r\n    type: PAGINATION_SET_NEXT_PAGE,\r\n});\r\n\r\nexport const setPrevPage = () => ({\r\n    type: PAGINATION_SET_PREV_PAGE,\r\n});\r\n","import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { setCountPages, setCurrentPage, setNextPage, setPrevPage } from '../../../store/pagination/actionCreators';\r\n\r\nimport './Pagination.scss';\r\n\r\nfunction Pagination({\r\n    currentPage,\r\n    itemsPerPage,\r\n    length,\r\n}) {\r\n    const {pagesCount} = useSelector((state) => state.pagination);\r\n    const dispatch = useDispatch();\r\n\r\n    const handlePageClick = (pageNumber) => {\r\n        dispatch(setCurrentPage(pageNumber));\r\n    };\r\n\r\n    const handlePrevClick = () => {\r\n        dispatch(setPrevPage());\r\n    };\r\n\r\n    const handleNextClick = () => {\r\n        dispatch(setNextPage());\r\n    };\r\n\r\n    useEffect(() => {\r\n        const newPagesCount = Math.ceil(length / itemsPerPage);\r\n        dispatch(setCountPages(newPagesCount));\r\n\r\n        return (() => dispatch(setCurrentPage(1)));\r\n    }, [length]);\r\n\r\n    const currentPageClasses = classNames(\r\n        'current_page',\r\n        {'current_page--hundreds': currentPage > 99},\r\n    );\r\n\r\n    return (pagesCount > 0\r\n        && (\r\n            <div className=\"pagination\">\r\n                <button type=\"button\" onClick={() => handlePrevClick()}>&#171;</button>\r\n\r\n                {currentPage !== 1 && (<button type=\"button\" onClick={() => handlePageClick(1)}>1</button>)}\r\n\r\n                {currentPage > 3 && (<span>...</span>)}\r\n\r\n                {currentPage > 2 && (<button type=\"button\" onClick={() => handlePageClick(currentPage - 1)}>{currentPage - 1}</button>)}\r\n\r\n                <span className={currentPageClasses}>{currentPage}</span>\r\n\r\n                {currentPage < pagesCount - 1 && (<button type=\"button\" onClick={() => handlePageClick(currentPage + 1)}>{currentPage + 1}</button>)}\r\n\r\n                {currentPage < pagesCount - 2 && (<span>...</span>)}\r\n\r\n                {currentPage !== pagesCount && (<button type=\"button\" onClick={() => handlePageClick(pagesCount)}>{pagesCount}</button>)}\r\n\r\n                <button type=\"button\" onClick={() => handleNextClick()}>&#187;</button>\r\n            </div>\r\n        )\r\n    );\r\n}\r\n\r\nPagination.propTypes = {\r\n    currentPage: PropTypes.number,\r\n    itemsPerPage: PropTypes.number,\r\n    length: PropTypes.number,\r\n};\r\n\r\nPagination.defaultProps = {\r\n    currentPage: 0,\r\n    itemsPerPage: 0,\r\n    length: 0,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nimport { PRELOADER_ITEMS_ARR } from '../../../constants/commonConstants';\r\n\r\nimport './Preloader.scss';\r\n\r\nfunction Preloader() {\r\n    return (\r\n        <div className=\"preloader\">\r\n            {PRELOADER_ITEMS_ARR.map((item) => (\r\n                    <span\r\n                        key={item}\r\n                        className=\"preloader__item\"\r\n                        style={{ animationDelay: `${item * 0.1}s` }}\r\n                    />\r\n                ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getImgSrc, changeNumberFormat } from '../../utils/commonUtils';\r\n\r\nimport './CarCard.scss';\r\n\r\nfunction CarCard({carObj}) {\r\n    const {\r\n        name,\r\n        categoryId,\r\n        number,\r\n        description,\r\n        tank,\r\n        colors,\r\n        priceMin,\r\n        priceMax,\r\n    } = carObj;\r\n    return (\r\n        <>\r\n            <div className=\"list_item__img\">\r\n                <img src={getImgSrc(carObj)} alt={name}/>\r\n            </div>\r\n            <div className=\"list_item__main_info\">\r\n                <div className=\"list_item__name\">\r\n                    <span>{name ?? 'Нет данных'}</span>\r\n                </div>\r\n                <div className=\"list_item__category\">\r\n                    {'Категория: '}\r\n                    <span>{categoryId ? categoryId.name : 'Нет данных'}</span>\r\n                </div>\r\n                <div className=\"list_item__desc\">\r\n                    {'Описание: '}\r\n                    <span>{description ?? 'Нет данных'}</span>\r\n                </div>\r\n                <div className=\"list_item__number\">\r\n                    {'Номер: '}\r\n                    {number ? <span>{changeNumberFormat(number)}</span> : 'Нет данных'}\r\n                </div>\r\n            </div>\r\n            <div className=\"list_item__options\">\r\n                <div className=\"list_item__colors\">\r\n                    {'Доступные цвета: '}\r\n                    {\r\n                        colors && colors.map((item) => <span>{item}</span>)\r\n                    }\r\n                </div>\r\n                <div className=\"list_item__price_range\">\r\n                    {'Цена: '}\r\n                    <span>{`от ${priceMin} до ${priceMax} `}</span>\r\n                    &#8381;\r\n                </div>\r\n                <div className=\"list_item__tank\">\r\n                    {'Топливо: '}\r\n                    <span>{tank ? `${tank} %` : 'Нет данных'}</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nCarCard.propTypes = {\r\n    carObj: PropTypes.objectOf(PropTypes.any),\r\n};\r\n\r\nCarCard.defaultProps = {\r\n    carObj: {},\r\n};\r\n\r\nexport default CarCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Checkbox.scss';\r\n\r\nfunction Checkbox({\r\n    label,\r\n    name,\r\n    value,\r\n    isReadOnly,\r\n    setCheckbox,\r\n}) {\r\n    const applyAdditionalOption = (optionName) => {\r\n        if (setCheckbox) setCheckbox(optionName);\r\n    };\r\n\r\n    return (\r\n        <div className=\"checkbox\">\r\n            <input\r\n                readOnly={isReadOnly}\r\n                name={name}\r\n                type=\"checkbox\"\r\n                id={name}\r\n                value={value}\r\n                checked={value}\r\n                onChange={() => applyAdditionalOption(name)}\r\n            />\r\n            <label htmlFor={name}>\r\n                {label}\r\n                {value && (\r\n                    <span>\r\n                        <svg width=\"8\" height=\"6\" viewBox=\"0 0 8 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2.75 4.73828L7.16406 0.324219L7.75 0.910156L2.75 5.91016L0.425781 3.58594L1.01172 3L2.75 4.73828Z\" fill=\"#121212\"/>\r\n                        </svg>\r\n                    </span>\r\n                )}\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nCheckbox.propTypes = {\r\n    label: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.bool,\r\n    isReadOnly: PropTypes.bool,\r\n    setCheckbox: PropTypes.func,\r\n};\r\n\r\nCheckbox.defaultProps = {\r\n    label: '',\r\n    name: '',\r\n    value: false,\r\n    isReadOnly: false,\r\n    setCheckbox: null,\r\n};\r\n\r\nexport default Checkbox;\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */ // ошибка линтера\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Checkbox from '../layouts/Checkbox';\r\n\r\nimport { getImgSrc, replaceDateFormat } from '../../utils/commonUtils';\r\n\r\nimport './OrderCard.scss';\r\n\r\nfunction OrderCard({orderObj}) {\r\n    const {\r\n        id,\r\n        carId,\r\n        cityId,\r\n        pointId,\r\n        dateFrom,\r\n        dateTo,\r\n        color,\r\n        isFullTank,\r\n        isNeedChildChair,\r\n        isRightWheel,\r\n        price,\r\n    } = orderObj;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"list_item__img\">\r\n                <img src={getImgSrc(carId)} alt={carId ? carId.name : id}/>\r\n            </div>\r\n            <div className=\"list_item__main_info\">\r\n                <div className=\"list_item__name_and_address\">\r\n                    <span>{carId ? carId.name : 'Нет данных'}</span>\r\n                    {' в '}\r\n                    <span>{cityId ? cityId.name : 'Нет данных'}</span>\r\n                    {', '}\r\n                    {pointId ? pointId.address : 'Нет данных'}\r\n                </div>\r\n                <div className=\"list_item__date\">\r\n                    {`${replaceDateFormat(dateFrom)} - ${replaceDateFormat(dateTo)}`}\r\n                </div>\r\n                <div className=\"list_item__color\">\r\n                    {'Цвет: '}\r\n                    <span>{color}</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"list_item__options\">\r\n                <div className=\"list_item__option\">\r\n                    <Checkbox\r\n                        label=\"Полный бак\"\r\n                        name=\"isFullTank\"\r\n                        value={isFullTank}\r\n                        isReadOnly\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"list_item__option\">\r\n                    <Checkbox\r\n                        label=\"Детское кресло\"\r\n                        name=\"isNeedChildChair\"\r\n                        value={isNeedChildChair}\r\n                        isReadOnly\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"list_item__option\">\r\n                    <Checkbox\r\n                        label=\"Правый руль\"\r\n                        name=\"isRightWheel\"\r\n                        value={isRightWheel}\r\n                        isReadOnly\r\n                    />\r\n                </div>\r\n            </div>\r\n            {price\r\n            && (\r\n                <div className=\"list_item__price\">\r\n                    {`${price.toLocaleString()} `}\r\n                    &#8381;\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nOrderCard.propTypes = {\r\n    orderObj: PropTypes.objectOf(PropTypes.any),\r\n};\r\n\r\nOrderCard.defaultProps = {\r\n    orderObj: null,\r\n};\r\n\r\nexport default OrderCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SimpleCard.scss';\r\n\r\nfunction SimpleCard({itemObj}) {\r\n    const {\r\n        name,\r\n        cityId,\r\n        address,\r\n        description,\r\n    } = itemObj;\r\n    return (\r\n        <>\r\n            <div className=\"simple_list_item\">\r\n                <span>{name ?? 'Нет данных'}</span>\r\n            </div>\r\n            {\r\n                cityId\r\n                && (\r\n                    <>\r\n                        <div className=\"simple_list_item\">\r\n                            <span>{cityId.name ?? 'Нет данных'}</span>\r\n                        </div>\r\n                        <div className=\"simple_list_item\">\r\n                            <span>{address ?? 'Нет данных'}</span>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                description\r\n                && (\r\n                    <div className=\"simple_list_item\">\r\n                        <span>{description ?? 'Нет данных'}</span>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nSimpleCard.propTypes = {\r\n    itemObj: PropTypes.objectOf(PropTypes.any),\r\n};\r\n\r\nSimpleCard.defaultProps = {\r\n    itemObj: {},\r\n};\r\n\r\nexport default SimpleCard;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CarCard from '../CarsList/CarCard';\r\nimport OrderCard from '../Orders/OrderCard';\r\nimport SimpleCard from '../SimpleCard/SimpleCard';\r\n\r\nimport './ListCard.scss';\r\n\r\nfunction ListCard({listName, cardName, itemObj}) {\r\n    let component = null;\r\n\r\n    if (cardName === 'car') {\r\n        component = <CarCard carObj={itemObj}/>;\r\n    } else if (cardName === 'order') {\r\n        component = <OrderCard orderObj={itemObj}/>;\r\n    } else {\r\n        component = <SimpleCard itemObj={itemObj}/>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"list_item\">\r\n            <div className=\"list_item__info\">\r\n                {component}\r\n            </div>\r\n\r\n            <Link to={`/admin/${listName}/${itemObj.id}`} className=\"list_item__change_btn\">\r\n                <span className=\"list_item__change_icon\"/>\r\n                Изменить\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nListCard.propTypes = {\r\n    listName: PropTypes.string,\r\n    cardName: PropTypes.string,\r\n    itemObj: PropTypes.objectOf(PropTypes.any),\r\n};\r\n\r\nListCard.defaultProps = {\r\n    listName: '',\r\n    cardName: '',\r\n    itemObj: null,\r\n};\r\n\r\nexport default ListCard;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Pagination from '../layouts/Pagination';\r\nimport Preloader from '../layouts/Preloader';\r\nimport ListCard from './ListCard';\r\n\r\nimport { getEntityList } from '../../utils/apiUtils';\r\n\r\nimport { ITEMS_PER_PAGE } from '../../constants/fetchConstants';\r\n\r\nimport './List.scss';\r\n\r\nfunction List({\r\n    title,\r\n    preloaderCondition,\r\n    entityDb,\r\n    allItemsArr,\r\n    listName,\r\n    cardName,\r\n    filterComponent,\r\n}) {\r\n    const {currentPage} = useSelector((state) => state.pagination);\r\n    const location = useLocation();\r\n    const [visibleList, setVisibleList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getEntityList(entityDb, location.search, 1)\r\n            .then((data) => (data ? setVisibleList(data.data) : []));\r\n\r\n        return (() => setVisibleList(null));\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        getEntityList(entityDb, location.search, currentPage)\r\n            .then((data) => (data ? setVisibleList(data.data) : []));\r\n\r\n            return (() => setVisibleList(null));\r\n    }, [currentPage]);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"admin_content__header\">{title}</header>\r\n            <article className=\"admin_content__main admin_article\">\r\n                <div className=\"admin_article__header\">\r\n                    {filterComponent}\r\n                </div>\r\n                {\r\n                    (listName !== 'orders' && listName !== 'cars')\r\n                    && (\r\n                        <div className=\"admin_article__titles\">\r\n                            <span className=\"simple_list_item\">Название</span>\r\n                            {\r\n                                listName === 'points'\r\n                                && (\r\n                                    <>\r\n                                        <span className=\"simple_list_item\">Город</span>\r\n                                        <span className=\"simple_list_item\">Адрес</span>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            {\r\n                                listName === 'categories'\r\n                                && <span className=\"simple_list_item\">Описание</span>\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n                {\r\n                    preloaderCondition && visibleList\r\n                    ? (\r\n                        <div className=\"admin_article__main\">\r\n                            {\r\n                                visibleList.length\r\n                                ? visibleList.map((item) => (\r\n                                    <ListCard\r\n                                        key={item.id}\r\n                                        listName={listName}\r\n                                        cardName={cardName}\r\n                                        itemObj={item}\r\n                                    />\r\n                                )) : 'Нет позиций, удовлетворяющих условиям фильтров'\r\n                            }\r\n                        </div>\r\n                    ) : <Preloader/>\r\n                }\r\n                <div className=\"admin_article__footer\">\r\n                    <Pagination\r\n                        currentPage={currentPage}\r\n                        itemsPerPage={ITEMS_PER_PAGE}\r\n                        length={allItemsArr && allItemsArr.length}\r\n                    />\r\n                </div>\r\n            </article>\r\n        </>\r\n    );\r\n}\r\n\r\nList.propTypes = {\r\n    title: PropTypes.string,\r\n    preloaderCondition: PropTypes.bool,\r\n    entityDb: PropTypes.string,\r\n    allItemsArr: PropTypes.arrayOf(PropTypes.any),\r\n    listName: PropTypes.string,\r\n    cardName: PropTypes.string,\r\n    filterComponent: PropTypes.func,\r\n};\r\n\r\nList.defaultProps = {\r\n    title: '',\r\n    preloaderCondition: false,\r\n    entityDb: '',\r\n    allItemsArr: null,\r\n    listName: '',\r\n    cardName: '',\r\n    filterComponent: null,\r\n};\r\n\r\nexport default List;\r\n","import {\r\n    ENTITIES_SET_ORDERS,\r\n    ENTITIES_SET_STATUSES,\r\n    ENTITIES_SET_CARS,\r\n    ENTITIES_SET_CITIES,\r\n    ENTITIES_SET_POINTS,\r\n    ENTITIES_SET_CATEGORIES,\r\n    ENTITIES_SET_SINGLE_ENTITY,\r\n    ENTITIES_SET_SINGLE_ENTITY_OPTION,\r\n    ENTITIES_SET_SINGLE_ENTITY_ADDITIONAL_OPTION,\r\n} from '../../constants/actionConstants';\r\n\r\nexport const setOrders = (ordersArr) => ({\r\n    type: ENTITIES_SET_ORDERS,\r\n    payload: ordersArr,\r\n});\r\n\r\nexport const setStatuses = (statusesArr) => ({\r\n    type: ENTITIES_SET_STATUSES,\r\n    payload: statusesArr,\r\n});\r\n\r\nexport const setCars = (carsArr) => ({\r\n    type: ENTITIES_SET_CARS,\r\n    payload: carsArr,\r\n});\r\n\r\nexport const setCities = (citiesArr) => ({\r\n    type: ENTITIES_SET_CITIES,\r\n    payload: citiesArr,\r\n});\r\n\r\nexport const setPoints = (pointsArr) => ({\r\n    type: ENTITIES_SET_POINTS,\r\n    payload: pointsArr,\r\n});\r\n\r\nexport const setCategories = (categoriesArr) => ({\r\n    type: ENTITIES_SET_CATEGORIES,\r\n    payload: categoriesArr,\r\n});\r\n\r\nexport const setSingleEntity = (entityObj) => ({\r\n    type: ENTITIES_SET_SINGLE_ENTITY,\r\n    payload: entityObj,\r\n});\r\n\r\nexport const setSingleEntityOption = (entityVal, entityName) => ({\r\n    type: ENTITIES_SET_SINGLE_ENTITY_OPTION,\r\n    payload: {entityVal, entityName},\r\n});\r\n\r\nexport const setSingleEntityAdditionalOption = (optionName) => ({\r\n    type: ENTITIES_SET_SINGLE_ENTITY_ADDITIONAL_OPTION,\r\n    payload: optionName,\r\n});\r\n","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport OrdersFilters from './OrdersFilter';\r\nimport List from '../List';\r\n\r\nimport { getEntityList } from '../../utils/apiUtils';\r\n\r\nimport { ORDERS_DB, STATUSES_DB, CARS_DB, CITIES_DB } from '../../constants/fetchConstants';\r\n\r\nimport { setRequestError } from '../../store/requestError/actionCreators';\r\nimport { setOrders, setStatuses, setCars, setCities } from '../../store/entities/actionCreators';\r\n\r\nfunction Orders() {\r\n    const {orders, cars, cities, statuses} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        getEntityList(CARS_DB)\r\n            .then((data) => (data ? dispatch(setCars(data.data)) : []));\r\n        getEntityList(STATUSES_DB)\r\n            .then((data) => (data ? dispatch(setStatuses(data.data)) : []));\r\n        getEntityList(CITIES_DB)\r\n            .then((data) => (data ? dispatch(setCities(data.data)) : []));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getEntityList(ORDERS_DB, location.search)\r\n            .then((data) => (data ? dispatch(setOrders(data.data)) : []))\r\n            .catch((err) => {\r\n                if (err.httpStatus) {\r\n                    dispatch(setRequestError(err.httpStatus));\r\n                }\r\n            });\r\n\r\n        return (() => {\r\n            dispatch(setOrders(null));\r\n        });\r\n    }, [location.search]);\r\n\r\n    const filterComponent = <OrdersFilters/>;\r\n\r\n    return (\r\n        <List\r\n            title=\"Заказы\"\r\n            preloaderCondition={orders && statuses && cars && cities}\r\n            entityDb={ORDERS_DB}\r\n            allItemsArr={orders}\r\n            listName={ORDERS_DB}\r\n            cardName=\"order\"\r\n            filterComponent={filterComponent}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Orders;\r\n","import React, {useState} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../layouts/Button';\r\n\r\nimport { setPopup } from '../../store/popup/actionCreators';\r\n\r\nimport { setSingleEntity } from '../../store/entities/actionCreators';\r\n\r\nimport { getSingleEntity, createEntity, changeEntity, deleteEntity } from '../../utils/apiUtils';\r\n\r\nimport './EditItemControls.scss';\r\n\r\nfunction EditItemControls({idObj, entityDb, disableSaveBtn}) {\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n\r\n    const {singleEntity} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCancelChanges = () => {\r\n        if (Object.keys(idObj).length === 0) {\r\n            dispatch(setSingleEntity({}));\r\n        } else {\r\n            getSingleEntity(entityDb, idObj.id)\r\n                .then((data) => (data ? dispatch(setSingleEntity(data.data)) : {}));\r\n        }\r\n    };\r\n\r\n    const handleSaveChanges = () => {\r\n        if (Object.keys(idObj).length === 0) {\r\n            createEntity(entityDb, singleEntity)\r\n                .then(() => dispatch(setPopup(true, 'Успех! Сохранение прошло успешно')))\r\n                .catch((err) => dispatch(setPopup(false, `Ошибка! ${err.httpText}`)))\r\n                .finally(() => setIsRedirect(true));\r\n        } else {\r\n            changeEntity(entityDb, singleEntity)\r\n                .then(() => dispatch(setPopup(true, 'Успех! Изменение прошло успешно')))\r\n                .catch((err) => dispatch(setPopup(false, `Ошибка! ${err.httpText}`)))\r\n                .finally(() => setIsRedirect(true));\r\n        }\r\n    };\r\n\r\n    const handleDeleteOrder = () => {\r\n        deleteEntity(entityDb, idObj.id)\r\n            .then(() => dispatch(setPopup(true, 'Успех! Удаление прошло успешно')))\r\n            .catch((err) => dispatch(setPopup(false, `Ошибка! ${err.httpText}`)))\r\n            .finally(() => setIsRedirect(true));\r\n    };\r\n\r\n    if (isRedirect) {\r\n        return <Redirect to={`/admin/${entityDb}`}/>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"item__controls\">\r\n            <Button\r\n                type=\"button\"\r\n                title=\"Сохранить\"\r\n                color=\"blue\"\r\n                onclick={handleSaveChanges}\r\n                isDisabled={disableSaveBtn}\r\n            />\r\n            <Button\r\n                type=\"button\"\r\n                title=\"Отменить\"\r\n                color=\"grey\"\r\n                onclick={handleCancelChanges}\r\n            />\r\n            {\r\n                Object.keys(idObj).length > 0\r\n                && (\r\n                    <Button\r\n                        type=\"button\"\r\n                        title=\"Удалить\"\r\n                        color=\"red\"\r\n                        onclick={handleDeleteOrder}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nEditItemControls.propTypes = {\r\n    idObj: PropTypes.objectOf(PropTypes.any),\r\n    entityDb: PropTypes.string,\r\n    disableSaveBtn: PropTypes.bool,\r\n};\r\n\r\nEditItemControls.defaultProps = {\r\n    idObj: null,\r\n    entityDb: '',\r\n    disableSaveBtn: false,\r\n};\r\n\r\nexport default EditItemControls;\r\n","import React, {useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport Selector from '../layouts/Selector';\r\nimport Checkbox from '../layouts/Checkbox';\r\nimport Preloader from '../layouts/Preloader';\r\nimport EditItemControls from '../EditItemControls';\r\n\r\nimport {\r\n    setStatuses,\r\n    setCars,\r\n    setCities,\r\n    setPoints,\r\n    setSingleEntity,\r\n    setSingleEntityOption,\r\n    setSingleEntityAdditionalOption,\r\n} from '../../store/entities/actionCreators';\r\n\r\nimport { getSingleEntity, getEntityList } from '../../utils/apiUtils';\r\nimport { STATUSES_DB, ORDERS_DB, CARS_DB, CITIES_DB, POINTS_DB } from '../../constants/fetchConstants';\r\n\r\nimport './OrderItem.scss';\r\n\r\nfunction OrderItem() {\r\n    const {cars, cities, statuses, points, singleEntity} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n    const id = useParams();\r\n\r\n    useEffect(() => {\r\n        getSingleEntity(ORDERS_DB, id.id)\r\n            .then((data) => (data ? dispatch(setSingleEntity(data.data)) : []));\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        getEntityList(STATUSES_DB)\r\n            .then((data) => (data ? dispatch(setStatuses(data.data)) : []));\r\n        getEntityList(CARS_DB)\r\n            .then((data) => (data ? dispatch(setCars(data.data)) : []));\r\n        getEntityList(CITIES_DB)\r\n            .then((data) => (data ? dispatch(setCities(data.data)) : []));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getEntityList(POINTS_DB, singleEntity && singleEntity.cityId ? `?cityId=${singleEntity.cityId.id}` : null)\r\n            .then((data) => (data ? dispatch(setPoints(data.data)) : []));\r\n    }, [singleEntity && singleEntity.cityId]);\r\n\r\n    const handleEntityChange = (entityObj, entityName) => {\r\n        dispatch(setSingleEntityOption(entityObj, entityName));\r\n    };\r\n\r\n    const handleCheckboxChange = (optionName) => {\r\n        dispatch(setSingleEntityAdditionalOption(optionName));\r\n    };\r\n\r\n    const optionsAlert = classNames(\r\n        'order_item__options_alert',\r\n        {\r\n            active: !(\r\n                singleEntity\r\n                && singleEntity.carId\r\n                && singleEntity.cityId\r\n                && singleEntity.pointId\r\n                && singleEntity.orderStatusId\r\n            ),\r\n        },\r\n    );\r\n\r\n    return (\r\n        <>\r\n        <header className=\"admin_content__header\">Редактирование заказа</header>\r\n        <article className=\"admin_content__main admin_article\">\r\n            {\r\n                singleEntity\r\n                && statuses\r\n                && cars\r\n                && cities\r\n                && points\r\n                ? (\r\n                    <div className=\"admin_article__main  item\">\r\n                        <div className=\"order_item__options\">\r\n                            <div className=\"order_item__main_options\">\r\n                                <Selector\r\n                                    title=\"модель\"\r\n                                    entityName=\"carId\"\r\n                                    chosenItem={singleEntity.carId && singleEntity.carId.name}\r\n                                    setChosen={handleEntityChange}\r\n                                    selectorArr={cars}\r\n                                    isError={!singleEntity.carId}\r\n                                />\r\n                                <Selector\r\n                                    title=\"город\"\r\n                                    entityName=\"cityId\"\r\n                                    chosenItem={singleEntity.cityId && singleEntity.cityId.name}\r\n                                    setChosen={handleEntityChange}\r\n                                    selectorArr={cities}\r\n                                    isError={!singleEntity.cityId}\r\n                                />\r\n                                <Selector\r\n                                    title=\"пункт выдачи\"\r\n                                    entityName=\"pointId\"\r\n                                    chosenItem={singleEntity.pointId && singleEntity.pointId.name}\r\n                                    setChosen={handleEntityChange}\r\n                                    selectorArr={points}\r\n                                    isError={!singleEntity.pointId}\r\n                                />\r\n                                <Selector\r\n                                    title=\"статус\"\r\n                                    entityName=\"orderStatusId\"\r\n                                    chosenItem={\r\n                                        singleEntity.orderStatusId\r\n                                        && singleEntity.orderStatusId.name\r\n                                    }\r\n                                    setChosen={handleEntityChange}\r\n                                    selectorArr={statuses}\r\n                                    isError={!singleEntity.orderStatusId}\r\n                                />\r\n\r\n                                <div className={optionsAlert}>\r\n                                    Все опции должны быть выбраны!\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"order_item__advanced_options\">\r\n                                <div className=\"order_item__option\">\r\n                                    <Checkbox\r\n                                        label=\"Полный бак\"\r\n                                        name=\"isFullTank\"\r\n                                        value={singleEntity.isFullTank}\r\n                                        setCheckbox={handleCheckboxChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"order_item__option\">\r\n                                    <Checkbox\r\n                                        label=\"Детское кресло\"\r\n                                        name=\"isNeedChildChair\"\r\n                                        value={singleEntity.isNeedChildChair}\r\n                                        setCheckbox={handleCheckboxChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"order_item__option\">\r\n                                    <Checkbox\r\n                                        label=\"Правый руль\"\r\n                                        name=\"isRightWheel\"\r\n                                        value={singleEntity.isRightWheel}\r\n                                        setCheckbox={handleCheckboxChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <EditItemControls\r\n                            idObj={id}\r\n                            entityDb={ORDERS_DB}\r\n                            disableSaveBtn={!(\r\n                                singleEntity.carId\r\n                                && singleEntity.cityId\r\n                                && singleEntity.pointId\r\n                                && singleEntity.orderStatusId\r\n                            )}\r\n                        />\r\n                    </div>\r\n                )\r\n                : <Preloader/>\r\n            }\r\n        </article>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderItem;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nimport Selector from '../layouts/Selector';\r\nimport InputField from '../layouts/InputField';\r\nimport Button from '../layouts/Button';\r\n\r\nimport { setSearchParams, getSearchParam } from '../../utils/commonUtils';\r\nimport { getSingleEntity } from '../../utils/apiUtils';\r\n\r\nimport { CATEGORIES_DB } from '../../constants/fetchConstants';\r\n\r\nfunction CarsFilters() {\r\n    const {categories} = useSelector((state) => state.entities);\r\n    const location = useLocation();\r\n    const {pathname} = useLocation();\r\n    const {push} = useHistory();\r\n\r\n    const [chosenCategory, setChosenCategory] = useState(null);\r\n    const [priceFrom, setPriceFrom] = useState('');\r\n    const [priceTo, setPriceTo] = useState('');\r\n    const [tank, setTank] = useState('');\r\n\r\n    useEffect(() => {\r\n        const categoryIdVal = getSearchParam(location, 'categoryId');\r\n        const priceFromVal = getSearchParam(location, 'priceMin[$gt]');\r\n        const priceToVal = getSearchParam(location, 'priceMax[$gt]');\r\n        const tankVal = getSearchParam(location, 'tank[$gt]');\r\n\r\n        if (categoryIdVal) {\r\n            getSingleEntity(CATEGORIES_DB, getSearchParam(location, 'categoryId'))\r\n                .then((data) => (data ? setChosenCategory(data.data) : null));\r\n        }\r\n        if (priceFromVal) setPriceFrom(priceFromVal);\r\n        if (priceToVal) setPriceFrom(priceToVal);\r\n        if (tankVal) setPriceFrom(tankVal);\r\n    }, []);\r\n\r\n    const handleCategoryChange = (category) => {\r\n        setChosenCategory(category);\r\n    };\r\n\r\n    const handlePriceFromChange = (priceFromStr) => {\r\n        setPriceFrom(priceFromStr);\r\n    };\r\n\r\n    const handlePriceToChange = (priceToStr) => {\r\n        setPriceTo(priceToStr);\r\n    };\r\n\r\n    const handleTankChange = (tankStr) => {\r\n        setTank(tankStr);\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        const paramsArr = [\r\n            {paramName: 'categoryId', paramValue: chosenCategory && chosenCategory.id},\r\n            {paramName: 'priceMin', paramValue: priceFrom.length > 0 ? priceFrom : null},\r\n            {paramName: 'priceMax', paramValue: priceTo.length > 0 ? priceTo : null},\r\n            {paramName: 'tank', paramValue: tank.length > 0 ? tank : null},\r\n        ];\r\n        const searchParams = setSearchParams(paramsArr);\r\n        push({pathname, search: `${searchParams}`});\r\n    };\r\n\r\n    const handleCancelFilters = () => {\r\n        setChosenCategory(null);\r\n        setPriceFrom('');\r\n        setPriceTo('');\r\n        setTank('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"admin_article__filters\">\r\n                <Selector\r\n                    title=\"категорию\"\r\n                    chosenItem={chosenCategory && chosenCategory.name}\r\n                    setChosen={handleCategoryChange}\r\n                    selectorArr={categories}\r\n                />\r\n                <InputField\r\n                    type=\"text\"\r\n                    inputValue={priceFrom}\r\n                    setInputValue={handlePriceFromChange}\r\n                    placeholder=\"Введите min цену\"\r\n                />\r\n                <InputField\r\n                    type=\"text\"\r\n                    inputValue={priceTo}\r\n                    setInputValue={handlePriceToChange}\r\n                    placeholder=\"Введите max цену\"\r\n                />\r\n                <InputField\r\n                    type=\"text\"\r\n                    inputValue={tank}\r\n                    setInputValue={handleTankChange}\r\n                    placeholder=\"Введите min уровень топлива\"\r\n                />\r\n            </div>\r\n            <div className=\"admin_article__filter_btns\">\r\n                <Button\r\n                    type=\"button\"\r\n                    title=\" Применить\"\r\n                    location=\"admin_article_header\"\r\n                    color=\"blue\"\r\n                    onclick={applyFilters}\r\n                />\r\n                <Button\r\n                    type=\"button\"\r\n                    title=\" Сбросить\"\r\n                    location=\"admin_article_header\"\r\n                    color=\"red\"\r\n                    onclick={handleCancelFilters}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CarsFilters;\r\n","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport CarsFilters from './CarsFilter';\r\nimport List from '../List';\r\n\r\nimport { getEntityList } from '../../utils/apiUtils';\r\n\r\nimport { CARS_DB, CATEGORIES_DB } from '../../constants/fetchConstants';\r\n\r\nimport { setRequestError } from '../../store/requestError/actionCreators';\r\nimport { setCars, setCategories } from '../../store/entities/actionCreators';\r\n\r\nfunction CarsList() {\r\n    const {cars, categories} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        getEntityList(CATEGORIES_DB)\r\n            .then((data) => (data ? dispatch(setCategories(data.data)) : []));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getEntityList(CARS_DB, location.search)\r\n            .then((data) => (data ? dispatch(setCars(data.data)) : []))\r\n            .catch((err) => {\r\n                if (err.httpStatus) {\r\n                    dispatch(setRequestError(err.httpStatus));\r\n                }\r\n            });\r\n\r\n        return (() => {\r\n            dispatch(setCars(null));\r\n        });\r\n    }, [location.search]);\r\n\r\n    const filterComponent = <CarsFilters/>;\r\n\r\n    return (\r\n        <List\r\n            title=\"Список автомобилей\"\r\n            preloaderCondition={cars && categories}\r\n            entityDb={CARS_DB}\r\n            allItemsArr={cars}\r\n            listName={CARS_DB}\r\n            cardName=\"car\"\r\n            filterComponent={filterComponent}\r\n        />\r\n    );\r\n}\r\n\r\nexport default CarsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './FileLoader.scss';\r\n\r\nfunction FileLoader({setImage}) {\r\n    const handleFileSelect = (evt) => {\r\n        const file = evt.currentTarget.files[0];\r\n        if (!file) return;\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(file);\r\n        fileReader.onload = () => {\r\n            const newThumbnail = {\r\n                path: fileReader.result,\r\n                originalname: file.name,\r\n                mimetype: file.type,\r\n                size: file.size,\r\n            };\r\n            setImage(newThumbnail, 'thumbnail');\r\n            console.log(fileReader.result);\r\n        };\r\n        console.log(file);\r\n    };\r\n\r\n    return (\r\n        <div className=\"file_loader\">\r\n            <label htmlFor=\"file_loader_input\">\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"file_loader_input\"\r\n                    name=\"file\"\r\n                    accept=\"image/png, image/jpeg\"\r\n                    onChange={handleFileSelect}\r\n                />\r\n                Выберите файл...\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nFileLoader.propTypes = {\r\n    setImage: PropTypes.func,\r\n};\r\n\r\nFileLoader.defaultProps = {\r\n    setImage: null,\r\n};\r\n\r\nexport default FileLoader;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport FileLoader from '../layouts/FileLoader';\r\n\r\nimport {setSingleEntityOption} from '../../store/entities/actionCreators';\r\n\r\nimport { getImgSrc } from '../../utils/commonUtils';\r\n\r\nfunction CarItemMainInfo() {\r\n    const {singleEntity} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleTextChange = (evt) => {\r\n        dispatch(setSingleEntityOption(evt.target.value, 'description'));\r\n    };\r\n\r\n    const handleEntityChange = (entityVal) => {\r\n        dispatch(setSingleEntityOption(entityVal, 'thumbnail'));\r\n    };\r\n\r\n    return (\r\n        <div className=\"car_main_info\">\r\n            <div className=\"car_main_info__img_name\">\r\n                <div className=\"car_main_info__img\">\r\n                    <img src={getImgSrc(singleEntity)} alt={singleEntity.name}/>\r\n                </div>\r\n                <div className=\"car_main_info__name\">\r\n                    {singleEntity.name}\r\n                </div>\r\n                <div className=\"car_main_info__category\">\r\n                    {singleEntity.categoryId ? singleEntity.categoryId.name : 'Нет данных'}\r\n                </div>\r\n                <div className=\"car_main_info__file_loader\">\r\n                    <FileLoader\r\n                        setImage={handleEntityChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"car_main_info__tank tank\">\r\n                <div className=\"tank__heading\">\r\n                    <span>Заполнено</span>\r\n                    <span>{singleEntity.tank ? `${singleEntity.tank}%` : 'Нет данных'}</span>\r\n                </div>\r\n                <div className=\"tank__fullness\">\r\n                    <div className=\"tank__indicator\" style={{ width: `${singleEntity.tank}%` }}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"car_main_info__desc\">\r\n                <label htmlFor=\"car_info_desc\">\r\n                    Описание\r\n                    <textarea\r\n                        type=\"text\"\r\n                        id=\"car_info_desc\"\r\n                        value={singleEntity.description}\r\n                        onChange={handleTextChange}\r\n                        label=\"Описание\"\r\n                        placeholder=\"Введите описание\"\r\n                    />\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CarItemMainInfo;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Selector from '../layouts/Selector';\r\nimport Checkbox from '../layouts/Checkbox';\r\nimport InputField from '../layouts/InputField';\r\nimport Button from '../layouts/Button';\r\n\r\nimport {setSingleEntityOption} from '../../store/entities/actionCreators';\r\n\r\nfunction CarItemOptions() {\r\n    const {categories, singleEntity} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n\r\n    const [colorInputValue, setColorInputValue] = useState('');\r\n    const [colorsArr, setColorsArr] = useState([]);\r\n    const [colorsFlagsArr, setColorsFlagsArr] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const newColorsFlagsArr = singleEntity.colors\r\n            && singleEntity.colors.map((color) => !!color);\r\n        setColorsFlagsArr(newColorsFlagsArr);\r\n        setColorsArr(singleEntity.colors);\r\n    }, [singleEntity.colors]);\r\n\r\n    const handleEntityChange = (entityVal, entityName) => {\r\n        dispatch(setSingleEntityOption(entityVal, entityName));\r\n    };\r\n\r\n    const handleColorInputChange = (colorName) => {\r\n        setColorInputValue(colorName);\r\n    };\r\n\r\n    const handleAddColor = () => {\r\n        if (\r\n            colorsArr\r\n            && (\r\n                colorsArr.includes(colorInputValue.toLocaleLowerCase())\r\n                || colorInputValue.length === 0\r\n            )\r\n        ) return;\r\n\r\n        const newColorsArr = singleEntity.colors\r\n            ? [...singleEntity.colors, colorInputValue]\r\n            : [colorInputValue];\r\n        dispatch(setSingleEntityOption(newColorsArr, 'colors'));\r\n        setColorInputValue('');\r\n    };\r\n\r\n    const handleCheckboxChange = (evt) => {\r\n        const neededIndex = singleEntity.colors.indexOf(evt);\r\n        const newColorsFlagsArr = colorsFlagsArr.map((item, index) => {\r\n            if (index === neededIndex) {\r\n                return !item;\r\n            }\r\n            return item;\r\n        });\r\n        setColorsFlagsArr(newColorsFlagsArr);\r\n    };\r\n\r\n    return (\r\n        <div className=\"car_settings__options\">\r\n            <InputField\r\n                type=\"text\"\r\n                inputValue={singleEntity.name}\r\n                setInputValue={handleEntityChange}\r\n                label=\"Модель автомобиля\"\r\n                placeholder=\"Введите название модели\"\r\n                entityName=\"name\"\r\n                isError={!singleEntity.name}\r\n            />\r\n            <Selector\r\n                label=\"Тип автомобиля\"\r\n                title=\"тип\"\r\n                entityName=\"categoryId\"\r\n                chosenItem={\r\n                    singleEntity.categoryId\r\n                    && singleEntity.categoryId.name\r\n                }\r\n                setChosen={handleEntityChange}\r\n                selectorArr={categories}\r\n                isError={!singleEntity.categoryId}\r\n            />\r\n            <InputField\r\n                type=\"text\"\r\n                inputValue={singleEntity.priceMin}\r\n                setInputValue={handleEntityChange}\r\n                label=\"Минимальная цена\"\r\n                placeholder=\"Введите минимальную цену\"\r\n                entityName=\"priceMin\"\r\n                isError={!singleEntity.priceMin}\r\n            />\r\n            <InputField\r\n                type=\"text\"\r\n                inputValue={singleEntity.priceMax}\r\n                setInputValue={handleEntityChange}\r\n                label=\"Максимальная цена\"\r\n                placeholder=\"Введите максимальную цену\"\r\n                entityName=\"priceMax\"\r\n                isError={!singleEntity.priceMax}\r\n            />\r\n            <InputField\r\n                type=\"text\"\r\n                inputValue={singleEntity.number}\r\n                setInputValue={handleEntityChange}\r\n                label=\"Номер автомобиля\"\r\n                placeholder=\"Введите номер\"\r\n                entityName=\"number\"\r\n            />\r\n            <InputField\r\n                type=\"text\"\r\n                inputValue={singleEntity.tank}\r\n                setInputValue={handleEntityChange}\r\n                label=\"Уровень топлива\"\r\n                placeholder=\"Введите уровень топлива\"\r\n                entityName=\"tank\"\r\n                isError={!singleEntity.tank}\r\n            />\r\n            <div>\r\n                <div className=\"car_settings__add_colors\">\r\n                    <InputField\r\n                        type=\"text\"\r\n                        inputValue={colorInputValue}\r\n                        setInputValue={handleColorInputChange}\r\n                        label=\"Доступные цвета\"\r\n                        placeholder=\"Введите цвет\"\r\n                    />\r\n                    <div className=\"car_settings__colors_btn\">\r\n                        <Button\r\n                            type=\"button\"\r\n                            location=\"colors\"\r\n                            onclick={handleAddColor}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"car_settings__available_colors\">\r\n                    {singleEntity.colors\r\n                        && singleEntity.colors.length > 0\r\n                        && singleEntity.colors.map((color, index) => (\r\n                        <Checkbox\r\n                            key={color}\r\n                            label={color}\r\n                            name={color}\r\n                            value={colorsFlagsArr && colorsFlagsArr[index]}\r\n                            setCheckbox={handleCheckboxChange}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CarItemOptions;\r\n","import React, {useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport CarItemMainInfo from './CarItemMainInfo';\r\nimport CarItemOptions from './CarItemOptions';\r\nimport Preloader from '../layouts/Preloader';\r\nimport EditItemControls from '../EditItemControls';\r\n\r\nimport { setCategories, setSingleEntity } from '../../store/entities/actionCreators';\r\n\r\nimport { getSingleEntity, getEntityList } from '../../utils/apiUtils';\r\nimport { CARS_DB, CATEGORIES_DB } from '../../constants/fetchConstants';\r\n\r\nimport './CarItem.scss';\r\n\r\nfunction CarItem() {\r\n    const {categories, singleEntity} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n    const id = useParams();\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(id).length === 0) {\r\n            dispatch(setSingleEntity({}));\r\n        } else {\r\n            getSingleEntity(CARS_DB, id.id)\r\n                .then((data) => (data ? dispatch(setSingleEntity(data.data)) : {}));\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        getEntityList(CATEGORIES_DB)\r\n            .then((data) => (data ? dispatch(setCategories(data.data)) : []));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"admin_content__header\">Карточка автомобиля</header>\r\n            <div className=\"admin_car_info\">\r\n                {\r\n                    singleEntity\r\n                    && categories\r\n                    ? (\r\n                        <>\r\n                            <CarItemMainInfo/>\r\n\r\n                            <div className=\"car_settings\">\r\n                                <div className=\"car_settings__settings\">\r\n                                    <div className=\"car_settings__heading\">\r\n                                        Настройки автомобиля\r\n                                    </div>\r\n                                    <CarItemOptions/>\r\n                                </div>\r\n                                <EditItemControls\r\n                                    idObj={id}\r\n                                    entityDb={CARS_DB}\r\n                                    disableSaveBtn={!(\r\n                                        singleEntity.name\r\n                                        && singleEntity.categoryId\r\n                                        && singleEntity.priceMin\r\n                                        && singleEntity.priceMax\r\n                                        && singleEntity.tank\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    )\r\n                    : <Preloader/>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CarItem;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nimport Selector from '../layouts/Selector';\r\nimport Button from '../layouts/Button';\r\n\r\nimport { setSearchParams, getSearchParam } from '../../utils/commonUtils';\r\nimport { getSingleEntity } from '../../utils/apiUtils';\r\n\r\nimport { CITIES_DB } from '../../constants/fetchConstants';\r\n\r\nfunction PointsFilter() {\r\n    const {cities} = useSelector((state) => state.entities);\r\n    const location = useLocation();\r\n    const {pathname} = useLocation();\r\n    const {push} = useHistory();\r\n\r\n    const [chosenCity, setChosenCity] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const cityIdVal = getSearchParam(location, 'cityId');\r\n\r\n        if (cityIdVal) {\r\n            getSingleEntity(CITIES_DB, getSearchParam(location, 'cityId'))\r\n                .then((data) => (data ? setChosenCity(data.data) : null));\r\n        }\r\n    }, []);\r\n\r\n    const handleCityChange = (city) => {\r\n        setChosenCity(city);\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        const paramsArr = [\r\n            {paramName: 'cityId', paramValue: chosenCity && chosenCity.id},\r\n        ];\r\n        const searchParams = setSearchParams(paramsArr);\r\n        push({pathname, search: `${searchParams}`});\r\n    };\r\n\r\n    const handleCancelFilters = () => {\r\n        setChosenCity(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"admin_article__filters\">\r\n                <Selector\r\n                    title=\"город\"\r\n                    chosenItem={chosenCity && chosenCity.name}\r\n                    setChosen={handleCityChange}\r\n                    selectorArr={cities}\r\n                />\r\n            </div>\r\n            <div className=\"admin_article__filter_btns\">\r\n                <Button\r\n                    type=\"button\"\r\n                    title=\" Применить\"\r\n                    location=\"admin_article_header\"\r\n                    color=\"blue\"\r\n                    onclick={applyFilters}\r\n                />\r\n                <Button\r\n                    type=\"button\"\r\n                    title=\" Сбросить\"\r\n                    location=\"admin_article_header\"\r\n                    color=\"red\"\r\n                    onclick={handleCancelFilters}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PointsFilter;\r\n","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport PointsFilter from './PointsFilter';\r\nimport List from '../List';\r\n\r\nimport { getEntityList } from '../../utils/apiUtils';\r\n\r\nimport { POINTS_DB, CITIES_DB } from '../../constants/fetchConstants';\r\n\r\nimport { setRequestError } from '../../store/requestError/actionCreators';\r\nimport { setPoints, setCities } from '../../store/entities/actionCreators';\r\n\r\nfunction PointsList() {\r\n    const {points, cities} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        getEntityList(CITIES_DB)\r\n            .then((data) => (data ? dispatch(setCities(data.data)) : []));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getEntityList(POINTS_DB, location.search)\r\n            .then((data) => (data ? dispatch(setPoints(data.data)) : []))\r\n            .catch((err) => {\r\n                if (err.httpStatus) {\r\n                    dispatch(setRequestError(err.httpStatus));\r\n                }\r\n            });\r\n\r\n        return (() => {\r\n            dispatch(setPoints(null));\r\n        });\r\n    }, [location.search]);\r\n\r\n    const filterComponent = <PointsFilter/>;\r\n\r\n    return (\r\n        <List\r\n            title=\"Список пунктов выдачи\"\r\n            preloaderCondition={points && cities}\r\n            entityDb={POINTS_DB}\r\n            allItemsArr={points}\r\n            listName={POINTS_DB}\r\n            cardName=\"point\"\r\n            filterComponent={filterComponent}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PointsList;\r\n","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport List from '../List';\r\n\r\nimport { getEntityList } from '../../utils/apiUtils';\r\n\r\nimport { CATEGORIES_DB } from '../../constants/fetchConstants';\r\n\r\nimport { setRequestError } from '../../store/requestError/actionCreators';\r\nimport { setCategories } from '../../store/entities/actionCreators';\r\n\r\nfunction CategoriesList() {\r\n    const {categories} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        getEntityList(CATEGORIES_DB, location.search)\r\n            .then((data) => (data ? dispatch(setCategories(data.data)) : []))\r\n            .catch((err) => {\r\n                if (err.httpStatus) {\r\n                    dispatch(setRequestError(err.httpStatus));\r\n                }\r\n            });\r\n\r\n        return (() => {\r\n            dispatch(setCategories(null));\r\n        });\r\n    }, [location.search]);\r\n\r\n    return (\r\n        <List\r\n            title=\"Список категорий\"\r\n            preloaderCondition={categories}\r\n            entityDb={CATEGORIES_DB}\r\n            allItemsArr={categories}\r\n            listName={CATEGORIES_DB}\r\n            cardName=\"category\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default CategoriesList;\r\n","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport List from '../List';\r\n\r\nimport { getEntityList } from '../../utils/apiUtils';\r\n\r\nimport { CITIES_DB } from '../../constants/fetchConstants';\r\n\r\nimport { setRequestError } from '../../store/requestError/actionCreators';\r\nimport { setCities } from '../../store/entities/actionCreators';\r\n\r\nfunction CitiesList() {\r\n    const {cities} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        getEntityList(CITIES_DB, location.search)\r\n            .then((data) => (data ? dispatch(setCities(data.data)) : []))\r\n            .catch((err) => {\r\n                if (err.httpStatus) {\r\n                    dispatch(setRequestError(err.httpStatus));\r\n                }\r\n            });\r\n\r\n        return (() => {\r\n            dispatch(setCities(null));\r\n        });\r\n    }, [location.search]);\r\n\r\n    return (\r\n        <List\r\n            title=\"Список городов\"\r\n            preloaderCondition={cities}\r\n            entityDb={CITIES_DB}\r\n            allItemsArr={cities}\r\n            listName={CITIES_DB}\r\n            cardName=\"city\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default CitiesList;\r\n","import React, { useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Selector from '../layouts/Selector';\r\nimport InputField from '../layouts/InputField';\r\nimport Preloader from '../layouts/Preloader';\r\nimport EditItemControls from '../EditItemControls';\r\n\r\nimport { setCities, setSingleEntity, setSingleEntityOption } from '../../store/entities/actionCreators';\r\n\r\nimport { getSingleEntity, getEntityList } from '../../utils/apiUtils';\r\nimport { CITIES_DB, POINTS_DB } from '../../constants/fetchConstants';\r\n\r\nimport './PointItem.scss';\r\n\r\nfunction PointItem() {\r\n    const {cities, singleEntity} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n    const id = useParams();\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(id).length === 0) {\r\n            dispatch(setSingleEntity({}));\r\n        } else {\r\n            getSingleEntity(POINTS_DB, id.id)\r\n                .then((data) => (data ? dispatch(setSingleEntity(data.data)) : {}));\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        getEntityList(CITIES_DB)\r\n            .then((data) => (data ? dispatch(setCities(data.data)) : []));\r\n    }, []);\r\n\r\n    const handleEntityChange = (entityObj, entityName) => {\r\n        dispatch(setSingleEntityOption(entityObj, entityName));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header className=\"admin_content__header\">Пункт выдачи</header>\r\n            <article className=\"admin_content__main\">\r\n                {\r\n                    singleEntity\r\n                    ? (\r\n                        <div className=\"admin_article__main item\">\r\n                            <div className=\"item__options\">\r\n                                <InputField\r\n                                    type=\"text\"\r\n                                    inputValue={singleEntity.name}\r\n                                    setInputValue={handleEntityChange}\r\n                                    label=\"Название пункта\"\r\n                                    placeholder=\"Введите название пункта\"\r\n                                    entityName=\"name\"\r\n                                    isError={!singleEntity.name}\r\n                                />\r\n                                <Selector\r\n                                    label=\"Город\"\r\n                                    title=\"город\"\r\n                                    entityName=\"cityId\"\r\n                                    chosenItem={singleEntity.cityId && singleEntity.cityId.name}\r\n                                    setChosen={handleEntityChange}\r\n                                    selectorArr={cities}\r\n                                    isError={!singleEntity.cityId}\r\n                                />\r\n                                <InputField\r\n                                    type=\"text\"\r\n                                    inputValue={singleEntity.address}\r\n                                    setInputValue={handleEntityChange}\r\n                                    label=\"Адрес пункта\"\r\n                                    placeholder=\"Введите адрес пункта\"\r\n                                    entityName=\"address\"\r\n                                    isError={!singleEntity.address}\r\n                                />\r\n                            </div>\r\n                            <EditItemControls\r\n                                idObj={id}\r\n                                entityDb={POINTS_DB}\r\n                                disableSaveBtn={!(\r\n                                    singleEntity.name\r\n                                    && singleEntity.cityId\r\n                                    && singleEntity.address\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    )\r\n                    : <Preloader/>\r\n                }\r\n            </article>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PointItem;\r\n","import React, { useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport InputField from '../layouts/InputField';\r\nimport Preloader from '../layouts/Preloader';\r\nimport EditItemControls from '../EditItemControls';\r\n\r\nimport { setSingleEntity, setSingleEntityOption } from '../../store/entities/actionCreators';\r\n\r\nimport { getSingleEntity } from '../../utils/apiUtils';\r\nimport { CATEGORIES_DB } from '../../constants/fetchConstants';\r\n\r\nfunction CategoryItem() {\r\n    const {singleEntity} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n    const id = useParams();\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(id).length === 0) {\r\n            dispatch(setSingleEntity({}));\r\n        } else {\r\n            getSingleEntity(CATEGORIES_DB, id.id)\r\n                .then((data) => (data ? dispatch(setSingleEntity(data.data)) : {}));\r\n        }\r\n    }, [id]);\r\n\r\n    const handleEntityChange = (entityObj, entityName) => {\r\n        dispatch(setSingleEntityOption(entityObj, entityName));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header className=\"admin_content__header\">Категория авто</header>\r\n            <article className=\"admin_content__main\">\r\n                {\r\n                    singleEntity\r\n                    ? (\r\n                        <div className=\"admin_article__main item\">\r\n                            <div className=\"item__options\">\r\n                                <InputField\r\n                                    type=\"text\"\r\n                                    inputValue={singleEntity.name}\r\n                                    setInputValue={handleEntityChange}\r\n                                    label=\"Название категории\"\r\n                                    placeholder=\"Введите название категории\"\r\n                                    entityName=\"name\"\r\n                                    isError={!singleEntity.name}\r\n                                />\r\n                                <InputField\r\n                                    type=\"text\"\r\n                                    inputValue={singleEntity.description}\r\n                                    setInputValue={handleEntityChange}\r\n                                    label=\"Описание категории\"\r\n                                    placeholder=\"Введите описание категории\"\r\n                                    entityName=\"description\"\r\n                                    isError={!singleEntity.description}\r\n                                />\r\n                            </div>\r\n                            <EditItemControls\r\n                                idObj={id}\r\n                                entityDb={CATEGORIES_DB}\r\n                                disableSaveBtn={!(singleEntity.name && singleEntity.description)}\r\n                            />\r\n                        </div>\r\n                    )\r\n                    : <Preloader/>\r\n                }\r\n            </article>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React, { useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport InputField from '../layouts/InputField';\r\nimport Preloader from '../layouts/Preloader';\r\nimport EditItemControls from '../EditItemControls';\r\n\r\nimport { setSingleEntity, setSingleEntityOption } from '../../store/entities/actionCreators';\r\n\r\nimport { getSingleEntity } from '../../utils/apiUtils';\r\nimport { CITIES_DB } from '../../constants/fetchConstants';\r\n\r\nfunction CityItem() {\r\n    const {singleEntity} = useSelector((state) => state.entities);\r\n    const dispatch = useDispatch();\r\n    const id = useParams();\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(id).length === 0) {\r\n            dispatch(setSingleEntity({}));\r\n        } else {\r\n            getSingleEntity(CITIES_DB, id.id)\r\n                .then((data) => (data ? dispatch(setSingleEntity(data.data)) : {}));\r\n        }\r\n    }, [id]);\r\n\r\n    const handleEntityChange = (entityObj, entityName) => {\r\n        dispatch(setSingleEntityOption(entityObj, entityName));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header className=\"admin_content__header\">Город</header>\r\n            <article className=\"admin_content__main\">\r\n                {\r\n                    singleEntity\r\n                    ? (\r\n                        <div className=\"admin_article__main item\">\r\n                            <div className=\"item__options\">\r\n                                <InputField\r\n                                    type=\"text\"\r\n                                    inputValue={singleEntity.name}\r\n                                    setInputValue={handleEntityChange}\r\n                                    label=\"Название города\"\r\n                                    placeholder=\"Введите название города\"\r\n                                    entityName=\"name\"\r\n                                    isError={!singleEntity.name}\r\n                                />\r\n                            </div>\r\n                            <EditItemControls\r\n                                idObj={id}\r\n                                entityDb={CITIES_DB}\r\n                                disableSaveBtn={!singleEntity.name}\r\n                            />\r\n                        </div>\r\n                    ) : <Preloader/>\r\n                }\r\n            </article>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CityItem;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Header from '../../layouts/Header';\r\nimport Footer from '../../layouts/Footer';\r\nimport Menu from '../../layouts/Menu';\r\nimport RequestError from '../../RequestError';\r\nimport Orders from '../../Orders';\r\nimport OrderItem from '../../OrderItem';\r\nimport CarsList from '../../CarsList';\r\nimport CarItem from '../../CarItem';\r\nimport PointsList from '../../PointsList';\r\nimport CategoriesList from '../../CategoriesList';\r\nimport CitiesList from '../../CitiesList';\r\nimport PointItem from '../../PointItem';\r\nimport CategoryItem from '../../CategoryItem';\r\nimport CityItem from '../../CityItem';\r\n\r\nimport './AdminPage.scss';\r\n\r\nfunction AdminPage() {\r\n    const {isError} = useSelector((state) => state.requestError);\r\n\r\n    return (\r\n        <>\r\n            <Menu/>\r\n            <div className=\"app_content\">\r\n                <Header/>\r\n                <main>\r\n                    {\r\n                        isError\r\n                        ? <RequestError/>\r\n                        : (\r\n                            <section className=\"admin_content\">\r\n                                <Switch>\r\n                                    <Route exact path=\"/admin/order\" component={Orders} />\r\n                                    <Route path=\"/admin/order/:id\" component={OrderItem} />\r\n                                    <Route exact path=\"/admin/car\" component={CarsList} />\r\n                                    <Route path=\"/admin/car/:id\" component={CarItem} />\r\n                                    <Route path=\"/admin/createCar\" component={CarItem} />\r\n                                    <Route exact path=\"/admin/point\" component={PointsList} />\r\n                                    <Route path=\"/admin/point/:id\" component={PointItem} />\r\n                                    <Route path=\"/admin/createPoint\" component={PointItem} />\r\n                                    <Route exact path=\"/admin/category\" component={CategoriesList} />\r\n                                    <Route path=\"/admin/category/:id\" component={CategoryItem} />\r\n                                    <Route path=\"/admin/createCategory\" component={CategoryItem} />\r\n                                    <Route exact path=\"/admin/city\" component={CitiesList} />\r\n                                    <Route path=\"/admin/city/:id\" component={CityItem} />\r\n                                    <Route path=\"/admin/createCity\" component={CityItem} />\r\n                                </Switch>\r\n                            </section>\r\n                        )\r\n                    }\r\n                </main>\r\n                <Footer/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdminPage;\r\n","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport { userCheck } from './store/user/actionCreators';\r\n\r\nimport LoginPage from './components/pages/LoginPage';\r\nimport AdminPage from './components/pages/AdminPage';\r\n\r\nimport { checkUser } from './utils/apiUtils';\r\n\r\nfunction App() {\r\n  const {isLogged} = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isLogged) {\r\n      checkUser()\r\n        .then((res) => dispatch(userCheck(res.username)));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n        !isLogged\r\n        ? <LoginPage />\r\n        : (\r\n          <Router basename=\"need_for_drive-admin\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Redirect to=\"/admin\"/>\r\n              </Route>\r\n              <Route path=\"/admin\" component={AdminPage}/>\r\n            </Switch>\r\n          </Router>\r\n          )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\n\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}